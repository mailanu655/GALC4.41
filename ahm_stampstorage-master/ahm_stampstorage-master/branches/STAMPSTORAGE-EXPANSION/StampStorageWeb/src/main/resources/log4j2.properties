status=error
verbose=true

appender.console.type=Console
appender.console.name=stdout
appender.console.layout.type=PatternLayout
appender.console.layout.Pattern=[%5p] %d{MMM dd HH:mm:ss,SSS} %n%m%n%n

#appender.file.type=File
#appender.file.name=FileLogger
#appender.file.fileName=${sys:LOGDIR}/GALCArchivingLog.txt
#appender.file.layout.type=PatternLayout
#appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SS} [%t] %c{1} - %msg%n

appender.rolling.type=RollingFile
appender.rolling.name=FileLogger
appender.rolling.fileName= stampstorage1.log
appender.rolling.filePattern= stampstorage1.log._%d.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
appender.rolling.policies.type = Policies

appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 100MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
#appender.rolling.strategy.delete.type = Delete
#appender.rolling.strategy.delete.basePath =${sys:LOGDIR}
#appender.rolling.strategy.delete.maxDepth = 10
#appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
#appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger.level=INFO
rootLogger.appenderRef.console.ref=stdout
rootLogger.appenderRefs=RollingFile
#rootLogger.appenderRef.file.ref = FileLogger
rootLogger.appenderRef.rolling.ref = FileLogger

logger.spring.name=org.springframework
logger.spring.level=fatal
