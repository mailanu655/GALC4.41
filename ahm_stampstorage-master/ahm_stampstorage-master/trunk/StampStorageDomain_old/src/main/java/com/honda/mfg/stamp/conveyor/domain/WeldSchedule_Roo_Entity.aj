// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import com.honda.mfg.stamp.conveyor.domain.WeldSchedule;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect WeldSchedule_Roo_Entity {
    
    declare @type: WeldSchedule: @Entity;
    
    declare @type: WeldSchedule: @Table(name = "WELD_SCHEDULE_TBX");
    
    @PersistenceContext
    transient EntityManager WeldSchedule.entityManager;
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "SCHEDULE_ID")
    private Long WeldSchedule.id;
    
    @Version
    @Column(name = "version")
    private Integer WeldSchedule.version;
    
    public Long WeldSchedule.getId() {
        return this.id;
    }
    
    public void WeldSchedule.setId(Long id) {
        this.id = id;
    }
    
    public Integer WeldSchedule.getVersion() {
        return this.version;
    }
    
    public void WeldSchedule.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void WeldSchedule.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void WeldSchedule.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            WeldSchedule attached = WeldSchedule.findWeldSchedule(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void WeldSchedule.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void WeldSchedule.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public WeldSchedule WeldSchedule.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        WeldSchedule merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager WeldSchedule.entityManager() {
        EntityManager em = new WeldSchedule().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long WeldSchedule.countWeldSchedules() {
        return entityManager().createQuery("SELECT COUNT(o) FROM WeldSchedule o", Long.class).getSingleResult();
    }
    
    public static List<WeldSchedule> WeldSchedule.findAllWeldSchedules() {
        return entityManager().createQuery("SELECT o FROM WeldSchedule o", WeldSchedule.class).getResultList();
    }
    
    public static WeldSchedule WeldSchedule.findWeldSchedule(Long id) {
        if (id == null) return null;
        return entityManager().find(WeldSchedule.class, id);
    }
    
    public static List<WeldSchedule> WeldSchedule.findWeldScheduleEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM WeldSchedule o", WeldSchedule.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
