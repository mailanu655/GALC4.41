// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import com.honda.mfg.stamp.conveyor.domain.enums.OrderStatus;

import java.sql.Timestamp;

privileged aspect WeldOrder_Roo_JavaBean {

    public OrderMgr WeldOrder.getOrderMgr() {
        return this.orderMgr;
    }

    public void WeldOrder.setOrderMgr(OrderMgr orderMgr) {
        this.orderMgr = orderMgr;
    }

    public Integer WeldOrder.getOrderSequence() {
        return this.orderSequence;
    }

    public void WeldOrder.setOrderSequence(Integer orderSequence) {
        this.orderSequence = orderSequence;
    }

    public Model WeldOrder.getModel() {
        return this.model;
    }

    public void WeldOrder.setModel(Model model) {
        this.model = model;
    }

    public OrderStatus WeldOrder.getOrderStatus() {
        return this.orderStatus;
    }

    public void WeldOrder.setOrderStatus(OrderStatus orderStatus) {
        this.orderStatus = orderStatus;
    }

    public Integer WeldOrder.getLeftQuantity() {
        return this.leftQuantity;
    }

    public void WeldOrder.setLeftQuantity(Integer qty) {
        this.leftQuantity = qty;
    }

    public Integer WeldOrder.getRightQuantity() {
        return this.rightQuantity;
    }

    public void WeldOrder.setRightQuantity(Integer qty) {
        this.rightQuantity = qty;
    }

    //delivered qty
    public Integer WeldOrder.getLeftDeliveredQuantity() {
        if(this.leftDeliveredQuantity==null){
            return new Integer(0);
        }
        return this.leftDeliveredQuantity;
    }

    public void WeldOrder.setLeftDeliveredQuantity(Integer qty) {
        this.leftDeliveredQuantity = qty;
    }

    public Integer WeldOrder.getRightDeliveredQuantity() {
         if(this.rightDeliveredQuantity==null){
            return new Integer(0);
        }
        return this.rightDeliveredQuantity;
    }

    public void WeldOrder.setRightDeliveredQuantity(Integer qty) {
        this.rightDeliveredQuantity = qty;
    }

    //consumed qty
    public Integer WeldOrder.getLeftConsumedQuantity() {
        if(this.leftConsumedQuantity == null){
            return new Integer(0);
        }
        return this.leftConsumedQuantity;
    }

    public void WeldOrder.setLeftConsumedQuantity(Integer qty) {
        this.leftConsumedQuantity = qty;
    }

    public Integer WeldOrder.getRightConsumedQuantity() {
        if(this.rightConsumedQuantity == null){
            return new Integer(0);
        }
        return this.rightConsumedQuantity;
    }

    public void WeldOrder.setRightConsumedQuantity(Integer qty) {
        this.rightConsumedQuantity = qty;
    }

    public Integer WeldOrder.getRemainingLeftQuantity() {
        if (this.getLeftDeliveredQuantity() == null) {
            return new Integer(0);
        }
        return this.leftQuantity - this.getLeftDeliveredQuantity();
    }

    public Integer WeldOrder.getRemainingRightQuantity() {
        if (this.getRightDeliveredQuantity() == null) {
            return new Integer(0);
        }
        return this.rightQuantity - this.getRightDeliveredQuantity();
    }

    public Timestamp WeldOrder.getCreatedDate() {
        return createdDate;
    }

    public void WeldOrder.setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public String WeldOrder.getCreatedBy() {
        return createdBy;
    }

    public void WeldOrder.setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    public String WeldOrder.getComments() {
        return comments;
    }

    public void WeldOrder.setComments(String comments) {
        this.comments = comments;
    }
    
    public OrderStatus WeldOrder.getDeliveryStatus() {
        return this.deliveryStatus;
    }
    
    public void WeldOrder.setDeliveryStatus(OrderStatus deliveryStatus) {
        this.deliveryStatus = deliveryStatus;
    }

    
    public Integer WeldOrder.getRightQueuedQty() {
        return this.rightQueuedQty;
    }
    
    public void WeldOrder.setRightQueuedQty(Integer rightQueuedQty) {
        this.rightQueuedQty = rightQueuedQty;
    }
    
    public Integer WeldOrder.getLeftQueuedQty() {
        return this.leftQueuedQty;
    }
    
    public void WeldOrder.setLeftQueuedQty(Integer leftQueuedQty) {
        this.leftQueuedQty = leftQueuedQty;
    }
    
    /**
     * check if order status equals the given status
     * @param checkStatus
     * @return boolean
     */
    public boolean WeldOrder.isStatus(OrderStatus checkStatus)  {
    	return (checkStatus != null && this.getOrderStatus() == checkStatus);
    }
    
    /**
     * determine if this is an order for only left dies
     * @return boolean
     */
    public boolean WeldOrder.isLeftOnly()  {
    	return this.getRightQuantity() == 0;
    }
    
    /**
     * determine if this is an order for only right dies
     * @return boolean
     */
    public boolean WeldOrder.isRightOnly()  {
    	return this.getLeftQuantity() == 0;
    }
    
    /**
     * get left die for this order
     * @return {@link Die}
     */
    public Die WeldOrder.getLeftDie()  {
    	Die die = null;
    	if(this.getModel() != null) die = this.model.getLeftDie();
    	return die;
    }
    
    /**
     * get right die for this order
     * @return {@link Die}
     */
    public Die WeldOrder.getRightDie()  {
    	Die die = null;
    	if(this.getModel() != null) die = this.model.getRightDie();
    	return die;
    }
    
    /**
     * check if the given die matches the left die for the order
     * @param {@link Die} thisDie
     * @return boolean
     */
    public boolean WeldOrder.isLeftDie(Die thisDie)  {
    	Die leftDie = this.getLeftDie();
    	return leftDie != null && leftDie.equals(thisDie);
    }
    
    /**
     * check if the given die matches the right die for the order
     * @param {@link Die} thisDie
     * @return boolean
     */
    public boolean WeldOrder.isRightDie(Die thisDie)  {
    	Die rDie = this.getRightDie();
    	return rDie != null && rDie.equals(thisDie);
    }

    /**
     * get the left queue stop for the associated order manager (weld line)
     * @return stop
     */
    public Stop WeldOrder.getLeftQueueStop()  {
    	Stop qStop = null;
    	if(this.orderMgr != null)  {
    		qStop = this.orderMgr.getLeftQueueStop();
    	}
    	return qStop;
    }

    /**
     * get the right queue stop for the associated order manager (weld line)
     * @return stop
     */
    public Stop WeldOrder.getRightQueueStop()  {
    	Stop qStop = null;
    	if(this.orderMgr != null)  {
    		qStop = this.orderMgr.getRightQueueStop();
    	}
    	return qStop;
    }

    /**
     * determine if this is order is in process
     * @return boolean
     */
    public boolean WeldOrder.isOrderInProcess()  {
		return orderStatus == OrderStatus.InProcess
				|| orderStatus == OrderStatus.OnHold
				|| orderStatus == OrderStatus.SelectingCarriers
				|| orderStatus == OrderStatus.RetrievingCarriers;
    }
    
    /**
     * determine if this is delivery is in process
     * @return boolean
     */
    public boolean WeldOrder.isDeliveryInProcess()  {
		return deliveryStatus == OrderStatus.InProcess
				|| deliveryStatus == OrderStatus.OnHold
				|| deliveryStatus == OrderStatus.DeliveringCarriers
				|| deliveryStatus == OrderStatus.Delivered;
    }
    
    /**
     * determine if this is a pending order
     * @return boolean
     */
    public boolean WeldOrder.isPending()  {
		return orderStatus == OrderStatus.Initialized
				|| orderStatus == OrderStatus.Queued;
    }
    

}
