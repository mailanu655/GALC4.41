// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import java.sql.Timestamp;

privileged aspect AlarmEvent_Roo_JavaBean {

    public Integer AlarmEvent.getLocation() {
        return this.location;
    }

    public void AlarmEvent.setLocation(Integer location) {
        this.location = location;
    }

    public Integer AlarmEvent.getAlarmNumber() {
        return this.alarmNumber;
    }

    public void AlarmEvent.setAlarmNumber(Integer alarmNumber) {
        this.alarmNumber = alarmNumber;
    }

    public Timestamp AlarmEvent.getEventTimestamp(){
        return this.eventTimestamp;
    }

    public void AlarmEvent.setEventTimestamp(Timestamp eventTimestamp) {
        this.eventTimestamp = eventTimestamp;
    }


    public Boolean AlarmEvent.getCleared() {
        return cleared;
    }

    public void AlarmEvent.setCleared(Boolean cleared) {
        this.cleared = cleared;
    }

    public String AlarmEvent.getClearedBy() {
        return clearedBy;
    }

    public void AlarmEvent.setClearedBy(String clearedBy) {
        this.clearedBy = clearedBy;
    }

    public Timestamp AlarmEvent.getClearedTimestamp() {
        return clearedTimestamp;
    }

    public void AlarmEvent.setClearedTimestamp(Timestamp clearedTimestamp) {
        this.clearedTimestamp = clearedTimestamp;
    }


    public Boolean AlarmEvent.getNotified() {
        return notified;
    }

    public void AlarmEvent.setNotified(Boolean notified) {
        this.notified = notified;
    }

    public Stop AlarmEvent.getLocationStop() {
        Stop stop = Stop.findStop(Long.parseLong(location.toString()));

        if (stop != null) {
            return stop;
        } else {
            stop = new Stop();
            stop.setName(location.toString());
            return stop;
        }

    }

    public AlarmDefinition AlarmEvent.getAlarm() {
        AlarmDefinition definition = AlarmDefinition.findAlarmByAlarmNumberAndLocation(this.alarmNumber, this.location);

        if (definition != null) {
            return definition;
        } else {
            definition = new AlarmDefinition();
            definition.setDescription(alarmNumber.toString());
            return definition;
        }
    }

}
