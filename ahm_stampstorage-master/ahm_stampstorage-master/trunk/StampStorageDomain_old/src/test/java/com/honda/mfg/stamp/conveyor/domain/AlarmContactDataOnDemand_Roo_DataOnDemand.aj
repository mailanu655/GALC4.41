// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import  com.honda.mfg.stamp.conveyor.domain.enums.ContactType;

privileged aspect AlarmContactDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AlarmContactDataOnDemand: @Component;
    
    private Random AlarmContactDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<AlarmContact> AlarmContactDataOnDemand.data;
    
    @Autowired
    private AlarmDefinitionDataOnDemand AlarmContactDataOnDemand.alarmDefinitionDataOnDemand;
    
    @Autowired
    private ContactDataOnDemand AlarmContactDataOnDemand.contactDataOnDemand;
    
    public AlarmContact AlarmContactDataOnDemand.getNewTransientAlarmContact(int index) {
        com.honda.mfg.stamp.conveyor.domain.AlarmContact obj = new com.honda.mfg.stamp.conveyor.domain.AlarmContact();
        setAlarm(obj, index);
        setContact(obj, index);
        setContactType(obj, index);
        return obj;
    }
    
    public void AlarmContactDataOnDemand.setAlarm(AlarmContact obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.AlarmDefinition alarm = alarmDefinitionDataOnDemand.getRandomAlarm();
        obj.setAlarm(alarm);
    }
    
    public void AlarmContactDataOnDemand.setContact(AlarmContact obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.Contact contact = contactDataOnDemand.getRandomContact();
        obj.setContact(contact);
    }
    
    public void AlarmContactDataOnDemand.setContactType(AlarmContact obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.enums.ContactType contactType = com.honda.mfg.stamp.conveyor.domain.enums.ContactType.class.getEnumConstants()[0];
        obj.setContactType(contactType);
    }
    
    public AlarmContact AlarmContactDataOnDemand.getSpecificAlarmContact(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        AlarmContact obj = data.get(index);
        return AlarmContact.findAlarmContact(obj.getId());
    }
    
    public AlarmContact AlarmContactDataOnDemand.getRandomAlarmContact() {
        init();
        AlarmContact obj = data.get(rnd.nextInt(data.size()));
        return AlarmContact.findAlarmContact(obj.getId());
    }
    
    public boolean AlarmContactDataOnDemand.modifyAlarmContact(AlarmContact obj) {
        return false;
    }
    
    public void AlarmContactDataOnDemand.init() {
        data = com.honda.mfg.stamp.conveyor.domain.AlarmContact.findAlarmContactEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'AlarmContact' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.honda.mfg.stamp.conveyor.domain.AlarmContact>();
        for (int i = 0; i < 10; i++) {
            com.honda.mfg.stamp.conveyor.domain.AlarmContact obj = getNewTransientAlarmContact(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
