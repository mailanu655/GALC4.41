// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Random;

privileged aspect StorageRowDataOnDemand_Roo_DataOnDemand {
    
    declare @type: StorageRowDataOnDemand: @Component;
    
    private Random StorageRowDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<StorageRow> StorageRowDataOnDemand.data;
    
    @Autowired
    private StopDataOnDemand StorageRowDataOnDemand.stopDataOnDemand;
    
    public StorageRow StorageRowDataOnDemand.getNewTransientStorageRow(int index) {
        com.honda.mfg.stamp.conveyor.domain.StorageRow obj = new com.honda.mfg.stamp.conveyor.domain.StorageRow();
        setRowName(obj, index);
        setStop(obj, index);
        setCapacity(obj, index);
        setStorageArea(obj, index);
        setAvailability(obj, index);
        return obj;
    }
    
    public void StorageRowDataOnDemand.setRowName(StorageRow obj, int index) {
        java.lang.String rowName = "rowName_" + index;
        obj.setRowName(rowName);
    }
    
    public void StorageRowDataOnDemand.setStop(StorageRow obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.Stop stop = stopDataOnDemand.getRandomStop();
        obj.setStop(stop);
    }
    
    public void StorageRowDataOnDemand.setCapacity(StorageRow obj, int index) {
        java.lang.Integer capacity = new Integer(index);
        obj.setCapacity(capacity);
    }
    
    public void StorageRowDataOnDemand.setStorageArea(StorageRow obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.enums.StorageArea storageArea = com.honda.mfg.stamp.conveyor.domain.enums.StorageArea.class.getEnumConstants()[0];
        obj.setStorageArea(storageArea);
    }
    
    public void StorageRowDataOnDemand.setAvailability(StorageRow obj, int index) {
        com.honda.mfg.stamp.conveyor.domain.enums.StopAvailability availability = com.honda.mfg.stamp.conveyor.domain.enums.StopAvailability.class.getEnumConstants()[0];
        obj.setAvailability(availability);
    }
    
    public StorageRow StorageRowDataOnDemand.getSpecificStorageRow(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        StorageRow obj = data.get(index);
        return StorageRow.findStorageRow(obj.getId());
    }
    
    public StorageRow StorageRowDataOnDemand.getRandomStorageRow() {
        init();
        StorageRow obj = data.get(rnd.nextInt(data.size()));
        return StorageRow.findStorageRow(obj.getId());
    }
    
    public boolean StorageRowDataOnDemand.modifyStorageRow(StorageRow obj) {
        return false;
    }
    
    public void StorageRowDataOnDemand.init() {
        data = com.honda.mfg.stamp.conveyor.domain.StorageRow.findStorageRowEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'StorageRow' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.honda.mfg.stamp.conveyor.domain.StorageRow>();
        for (int i = 0; i < 10; i++) {
            com.honda.mfg.stamp.conveyor.domain.StorageRow obj = getNewTransientStorageRow(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
