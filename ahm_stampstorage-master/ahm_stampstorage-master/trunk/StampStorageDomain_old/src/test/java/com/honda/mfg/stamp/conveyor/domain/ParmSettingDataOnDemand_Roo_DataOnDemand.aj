// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import com.honda.mfg.stamp.conveyor.domain.ParmSetting;
import java.sql.Timestamp;

import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect ParmSettingDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ParmSettingDataOnDemand: @Component;
    
    private Random ParmSettingDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ParmSetting> ParmSettingDataOnDemand.data;
    
    public ParmSetting ParmSettingDataOnDemand.getNewTransientParmSetting(int index) {
        com.honda.mfg.stamp.conveyor.domain.ParmSetting obj = new com.honda.mfg.stamp.conveyor.domain.ParmSetting();
        setFieldname(obj, index);
        setFieldvalue(obj, index);
        setDescription(obj, index);
        setUpdatedby(obj, index);
        setUpdatetstp(obj, index);
        return obj;
    }
    
    public void ParmSettingDataOnDemand.setFieldname(ParmSetting obj, int index) {
        java.lang.String fieldname = "fieldname_" + index;
        obj.setFieldname(fieldname);
    }
    
    public void ParmSettingDataOnDemand.setFieldvalue(ParmSetting obj, int index) {
        java.lang.String fieldvalue = "fieldvalue_" + index;
        obj.setFieldvalue(fieldvalue);
    }
    
    public void ParmSettingDataOnDemand.setDescription(ParmSetting obj, int index) {
        java.lang.String description = "description_" + index;
        obj.setDescription(description);
    }
    
    public void ParmSettingDataOnDemand.setUpdatedby(ParmSetting obj, int index) {
        java.lang.String updatedby = "updatedby_" + index;
        obj.setUpdatedby(updatedby);
    }
    
    public void ParmSettingDataOnDemand.setUpdatetstp(ParmSetting obj, int index) {
        java.sql.Timestamp updatetstp = new Timestamp(System.currentTimeMillis());
        obj.setUpdatetstp(updatetstp);
    }
    
    public ParmSetting ParmSettingDataOnDemand.getSpecificParmSetting(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ParmSetting obj = data.get(index);
        return ParmSetting.findParmSetting(obj.getId());
    }
    
    public ParmSetting ParmSettingDataOnDemand.getRandomParmSetting() {
        init();
        ParmSetting obj = data.get(rnd.nextInt(data.size()));
        return ParmSetting.findParmSetting(obj.getId());
    }
    
    public boolean ParmSettingDataOnDemand.modifyParmSetting(ParmSetting obj) {
        return false;
    }
    
    public void ParmSettingDataOnDemand.init() {
        data = com.honda.mfg.stamp.conveyor.domain.ParmSetting.findParmSettingEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ParmSetting' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.honda.mfg.stamp.conveyor.domain.ParmSetting>();
        for (int i = 0; i < 10; i++) {
            com.honda.mfg.stamp.conveyor.domain.ParmSetting obj = getNewTransientParmSetting(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
