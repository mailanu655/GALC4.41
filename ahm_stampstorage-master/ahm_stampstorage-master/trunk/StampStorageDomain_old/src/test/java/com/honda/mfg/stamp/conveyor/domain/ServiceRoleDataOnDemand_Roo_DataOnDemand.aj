// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.honda.mfg.stamp.conveyor.domain;

import com.honda.mfg.stamp.conveyor.domain.ServiceRole;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect ServiceRoleDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ServiceRoleDataOnDemand: @Component;
    
    private Random ServiceRoleDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ServiceRole> ServiceRoleDataOnDemand.data;
    
    public ServiceRole ServiceRoleDataOnDemand.getNewTransientServiceRole(int index) {
        com.honda.mfg.stamp.conveyor.domain.ServiceRole obj = new com.honda.mfg.stamp.conveyor.domain.ServiceRole();
        setPort(obj, index);
        setIp(obj, index);
        setServiceName(obj, index);
        setDesignatedPrimary(obj, index);
        setFailoverOrder(obj, index);
        setCurrentActive(obj, index);
        setHostName(obj, index);
        return obj;
    }
    
    public void ServiceRoleDataOnDemand.setPort(ServiceRole obj, int index) {
        int port = index;
        if (port > 65535) {
            port = 65535;
        }
        obj.setPort(port);
    }
    
    public void ServiceRoleDataOnDemand.setIp(ServiceRole obj, int index) {
        java.lang.String ip = "ip_" + index;
        obj.setIp(ip);
    }
    
    public void ServiceRoleDataOnDemand.setServiceName(ServiceRole obj, int index) {
        java.lang.String serviceName = "serviceName_" + index;
        obj.setServiceName(serviceName);
    }
    
    public void ServiceRoleDataOnDemand.setDesignatedPrimary(ServiceRole obj, int index) {
        java.lang.Boolean designatedPrimary = Boolean.TRUE;
        obj.setDesignatedPrimary(designatedPrimary);
    }
    
    public void ServiceRoleDataOnDemand.setFailoverOrder(ServiceRole obj, int index) {
        int failoverOrder = index;
        obj.setFailoverOrder(failoverOrder);
    }
    
    public void ServiceRoleDataOnDemand.setCurrentActive(ServiceRole obj, int index) {
        java.lang.Boolean currentActive = Boolean.TRUE;
        obj.setCurrentActive(currentActive);
    }
    
    public void ServiceRoleDataOnDemand.setHostName(ServiceRole obj, int index) {
        java.lang.String hostName = "hostName_" + index;
        obj.setHostName(hostName);
    }
    
    public ServiceRole ServiceRoleDataOnDemand.getSpecificServiceRole(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ServiceRole obj = data.get(index);
        return ServiceRole.findServiceRole(obj.getId());
    }
    
    public ServiceRole ServiceRoleDataOnDemand.getRandomServiceRole() {
        init();
        ServiceRole obj = data.get(rnd.nextInt(data.size()));
        return ServiceRole.findServiceRole(obj.getId());
    }
    
    public boolean ServiceRoleDataOnDemand.modifyServiceRole(ServiceRole obj) {
        return false;
    }
    
    public void ServiceRoleDataOnDemand.init() {
        data = com.honda.mfg.stamp.conveyor.domain.ServiceRole.findServiceRoleEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ServiceRole' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.honda.mfg.stamp.conveyor.domain.ServiceRole>();
        for (int i = 0; i < 10; i++) {
            com.honda.mfg.stamp.conveyor.domain.ServiceRole obj = getNewTransientServiceRole(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
