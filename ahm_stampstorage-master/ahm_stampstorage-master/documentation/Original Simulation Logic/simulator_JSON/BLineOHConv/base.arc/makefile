#**************************************************************************
# $Header:   P:/lib/makefile.win   1.62   Nov 29 2002 13:05:04   epage  $
#**************************************************************************
# use GNU make
#
# this makefile was generated by AutoMod
#
# Important: you need to define the ASI environment variable
#

#**************************************************************************
# set up OS-dependent variables

CXX				= cxx
OBJ				= obj

#**************************************************************************

#*********************************************************************
# Microsoft Visual C compiler

ifdef MODEL_COMP_VISUALC

ifndef MSVC
MSVC			= $(MSVCDir)
endif # MSVC

COMPILER		= VisualC

CC				= $(MSVC)\bin\cl
C_NOLINK		= /c
C_BOTH			= /w /J /Zp8 /nologo
C_DEBUG			= $(C_BOTH) /MDd /Z7 /Od
C_OPTIMIZE		= $(C_BOTH) /MD /O2 -DNDEBUG

CXXC			= $(MSVC)\bin\cl
CXX_NOLINK		= /c
CXX_BOTH		= $(C_BOTH)
CXX_DEBUG		= $(C_DEBUG)
CXX_OPTIMIZE	= $(C_OPTIMIZE)

LD				= $(MSVC)\bin\link
DLL_BOTH		= /incremental:no /nologo /dll
DLL_OPTIMIZE	= $(DLL_BOTH)
DLL_DEBUG		= $(DLL_BOTH) /debug /debugtype:CV

LIBPREFIX		=
LIBPOSTFIX		=

SYS_DEFINES		= -DVISUALC
SYS_INCLUDES	= -I$(MSVC)\include
SYS_LIBRARIES	=
SYS_LIB_PATH	= /LIBPATH:$(MSVC)\lib

endif # MODEL_COMP_VISUALC

#*********************************************************************

#*********************************************************************
# GNU compiler

ifndef MODEL_COMP_VISUALC

COMPILER		= GNU

CC				= $(ASI)\bin\gcc
C_BOTH			= -w -malign-double
C_DEBUG			= -g $(C_BOTH)
C_OPTIMIZE		= -O2 -DNDEBUG $(C_BOTH)
C_NOLINK		= -c -m486

CXXC			= $(ASI)\bin\gcc
CXX_DEBUG		= $(C_DEBUG)
CXX_OPTIMIZE	= $(C_OPTIMIZE)
CXX_NOLINK		= -c -m486

LD				= $(ASI)\bin\ld
AS				= --as=$(ASI)\bin\as
DLLTOOL			= $(ASI)\bin\dlltool
DEFFILE			= $(TARGET).def
EXPFILE			= $(TARGET).exp
OUT_DEF			= --def $(DEFFILE)
OUT_EXP			= --output-exp $(EXPFILE)
DLLENTRY		= -e _DllEntryPoint@12
BASEFILE		= --base-file $(TARGET).base
IMAGEBASE		= --subsystem windows --image-base 0x20000000

LD_PHASE1		= $(IMAGEBASE) $(DLLENTRY) -s $(BASEFILE) --dll
LD_PHASE2		= $(IMAGEBASE) $(DLLENTRY) $(EXPFILE) -s $(BASEFILE) -dll
LD_PHASE3		= $(IMAGEBASE) $(DLLENTRY) $(EXPFILE) --dll

LIBPREFIX		= $(ASI)/lib/
LIBPOSTFIX		= _gnu

SYS_DEFINES		=
SYS_INCLUDES	= -I$(ASI)\include\gnu
SYS_LIBRARIES	=
SYS_LIB_PATH	=

endif # not MODEL_COMP_VISUALC

#*********************************************************************

#*********************************************************************
# user environment variables section

ifdef ASIDEFINES
USER_DEFINES	= $(ASIDEFINES:%=-D%)
else # ASIDEFINES
USER_DEFINES	=
endif # ASIDEFINES

ifdef ASIINCLUDES
USER_INCLUDES	= $(ASIINCLUDES:%=-I%)
else # ASIINCLUDES
USER_INCLUDES	=
endif # ASIINCLUDES

ifdef MODEL_COMP_VISUALC
ifdef ASILIBS
USER_LIBS		= $(ASILIBS)
else # ASILIBS
USER_LIBS		=
endif # ASILIBS
endif # MODEL_COMP_VISUALC

ifdef MODEL_COMP_VISUALC
ifdef ASILIBPATHS
USER_LIBPATHS	= $(ASILIBPATHS:%=/LIBPATH:%)
else # ASILIBPATHS
USER_LIBPATHS	=
endif # ASILIBPATHS
endif # MODEL_COMP_VISUALC

#**************************************************************************
# main section

INCLUDE			= -I$(ASI)\include $(USER_INCLUDES) $(SYS_INCLUDES)

MODEL_DEFINES	= -DAM_VER=110 -DAM80 -DBUILDMODELDLL 

DEFINES			= $(SYS_DEFINES) $(MODEL_DEFINES) $(USER_DEFINES)

ASI_LIBS		=  asl bgrf xvt_ogl xvt

OTHER_LIBS		=

LIB_PATH		= /LIBPATH:$(ASI)\lib $(SYS_LIB_PATH) $(USER_LIBPATHS)

ECHO			= $(ASI)\bin\echo -E
COPY			= $(ASI)\bin\cp

ifdef ASIDEBUG
DLL_NAME		= $(TARGET)g.dll
DLL_LIBS		= $(ASI_LIBS:%=$(LIBPREFIX)%$(LIBPOSTFIX)g.lib)
LIBS			= $(DLL_LIBS) $(OTHER_LIBS:%=%.lib) $(USER_LIBS:%=%.lib)
RUNMODEL		= $(ASI)\bin\amrung.exe
DEBUG_MSG		= Debug
C_OPTIONS		= $(DEFINES) $(INCLUDE) $(C_DEBUG)
CXX_OPTIONS		= $(DEFINES) $(INCLUDE) $(CXX_DEBUG)
DLL_OPTIONS		= $(DLL_DEBUG)
else # ASIDEBUG
DLL_NAME		= $(TARGET).dll
DLL_LIBS		= $(ASI_LIBS:%=$(LIBPREFIX)%$(LIBPOSTFIX).lib)
LIBS			= $(DLL_LIBS) $(OTHER_LIBS:%=%.lib) $(USER_LIBS:%=%.lib)
RUNMODEL		= $(ASI)\bin\amrun.exe
ifdef MODEL_DEBUG
DEBUG_MSG		= Debug Model
C_OPTIONS		= $(DEFINES) $(INCLUDE) $(C_DEBUG)
CXX_OPTIONS		= $(DEFINES) $(INCLUDE) $(CXX_DEBUG)
DLL_OPTIONS		= $(DLL_DEBUG)
else # MODEL_DEBUG
DEBUG_MSG		= 
C_OPTIONS		= $(DEFINES) $(INCLUDE) $(C_OPTIMIZE)
CXX_OPTIONS		= $(DEFINES) $(INCLUDE) $(CXX_OPTIMIZE)
DLL_OPTIONS		= $(DLL_OPTIMIZE)
endif # MODEL_DEBUG
endif # ASIDEBUG

#**************************************************************************

#**************************************************************************
# model section

GROUP_1 = base~model \
	base~init1 \
	base~init2 \
	code

MODULES			= $(GROUP_1) 
OBJ_MODULES		= $(MODULES:%=%.$(OBJ))

TARGET			= base

MODELNAME		= ..\$(TARGET).exe

#**************************************************************************

#**************************************************************************
# objects section

.PHONY : model

model : libscheck libpathscheck $(DLL_NAME) $(MODELNAME)

$(MODELNAME) : $(DLL_NAME)
	@$(ECHO) making $@
	@$(COPY) $(RUNMODEL) $(MODELNAME)

ifdef MODEL_COMP_VISUALC

# compiling with Visual C

%.$(OBJ) : %.c
	@$(ECHO) compiling $< with $(COMPILER) $(DEBUG_MSG) ...
	@$(CC) $(C_OPTIONS) $(C_NOLINK) $< -Fo$@

%.$(OBJ) : %.$(CXX)
	@$(ECHO) compiling $< with $(COMPILER) $(DEBUG_MSG) ...
	@$(CXXC) $(CXX_OPTIONS) $(CXX_NOLINK) $< -Fo$@

$(DLL_NAME) : $(OBJ_MODULES)
	@$(ECHO) linking $@ with $(COMPILER) ...
	@$(LD) $(DLL_OPTIONS) /out:$(DLL_NAME) $(LIB_PATH) $(OBJ_MODULES) $(LIBS)

else # MODEL_COMP_VISUALC

# compiling with GNU

%.$(OBJ) : %.c
	@$(ECHO) compiling $< with $(COMPILER) $(DEBUG_MSG) ...
	@$(CC) $(C_OPTIONS) $(C_NOLINK) $< -o$@

%.$(OBJ) : %.$(CXX)
	@$(ECHO) compiling $< with $(COMPILER) $(DEBUG_MSG) ...
	@$(CXXC) $(CXX_OPTIONS) $(CXX_NOLINK) $< -o$@

$(DLL_NAME) : $(OBJ_MODULES) $(DEFFILE)
	@$(ECHO) linking $@ with $(COMPILER) ...
#	@$(ECHO) Phase 1
	@$(LD) $(LD_PHASE1) -o $(DLL_NAME) $(OBJ_MODULES) $(LIBS)
	@$(DLLTOOL) $(AS) --dllname $(DLL_NAME) $(BASEFILE) $(OUT_DEF) $(OUT_EXP)
#	@$(ECHO) Phase 2
	@$(LD) $(LD_PHASE2) -o $(DLL_NAME) $(OBJ_MODULES) $(LIBS)
	@$(DLLTOOL) $(AS) --dllname $(DLL_NAME) $(BASEFILE) $(OUT_DEF) $(OUT_EXP)
#	@$(ECHO) Phase 3
	@$(LD) $(LD_PHASE3) -o $(DLL_NAME) $(OBJ_MODULES) $(LIBS)

endif # MODEL_COMP_VISUALC

libscheck:
ifndef MODEL_COMP_VISUALC
ifdef ASILIBS
	@$(ECHO) ASILIBS does not work with gnu
endif # ASILIBS
endif # MODEL_COMP_VISUALC

libpathscheck:
ifndef MODEL_COMP_VISUALC
ifdef ASILIBPATHS
	@$(ECHO) ASILIBPATHS does not work with gnu
endif # ASILIBPATHS
endif # MODEL_COMP_VISUALC

#**************************************************************************


$(GROUP_1:%=%.$(OBJ)) : user.h decls.h





