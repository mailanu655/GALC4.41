--This is to create new tables for Regional GALC 1.0
--BLOCK_BUILD_RESULTS_TBX
--BLOCK_HISTORY_TBX
--BLOCK_LOAD_TBX
--BLOCK_TBX
--GAL198_HIST_TBX
--GTS_PRODUCT_TBX
--HEAD_BUILD_RESULTS_TBX
--HEAD_HISTORY_TBX
--HEAD_TBX
--HOLD_PARM_TBX
--HOST_PRIORITY_PLAN_TBX
--PART_LOT_TBX
--PLC_MEMORY_MAP_TBX
--PRODUCT_SEQUENCE_TBX
--PRODUCT_SPEC_CODE_TBX
--QUORUM_DETAIL_TBX
--QUORUM_TBX
--REQUIRED_PARTS_TBX
--SKIPPED_PRODUCT_TBX
--STANDARD_SCHEDULE_TBX
--TRAILER_INFO_TBX
--TRAILER_STATUS_TBX
--VANNING_SCHEDULE_TBX

CREATE TABLE GALADM.BLOCK_BUILD_RESULTS_TBX (
   BLOCK_ID VARCHAR(17) NOT NULL,
   PART_NAME VARCHAR(32) DEFAULT ' ' NOT NULL,
   ACTUAL_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
   RESULT_VALUE VARCHAR(30),
   INSTALLED_PART_STATUS INTEGER,
   ASSOCIATE_NO VARCHAR(11),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT BLOCK_BUILD_RESULTS_PK PRIMARY KEY
     (BLOCK_ID,PART_NAME)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.BLOCK_BUILD_RESULTS_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.BLOCK_BUILD_RESULTS_TBX IS 'RMT BlockBuildResult';

CREATE TRIGGER GALADM.BLOCK_BUILD_RESULTS_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.BLOCK_BUILD_RESULTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.BLOCK_BUILD_RESULTS_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.BLOCK_BUILD_RESULTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.BLOCK_HISTORY_TBX (
   BLOCK_ID VARCHAR(17) NOT NULL,
   PROCESS_POINT_ID CHARACTER(16) DEFAULT ' ' NOT NULL,
   ACTUAL_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   PROCESS_COUNT INTEGER DEFAULT 1 NOT NULL,
   CONSTRAINT BLOCK_HISTORY_PK PRIMARY KEY
     (BLOCK_ID,PROCESS_POINT_ID,ACTUAL_TIMESTAMP)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.BLOCK_HISTORY_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.BLOCK_HISTORY_TBX IS 'RMT BlockHistory';

CREATE TRIGGER GALADM.BLOCK_HISTORY_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.BLOCK_HISTORY_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.BLOCK_HISTORY_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.BLOCK_HISTORY_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX GALADM.BLOCK_HISTORY_I1
  ON GALADM.BLOCK_HISTORY_TBX
    ( PROCESS_POINT_ID, ACTUAL_TIMESTAMP )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE TABLE GALADM.BLOCK_LOAD_TBX (
   MC_NUMBER CHARACTER(20) NOT NULL,
   PRODUCTION_LOT CHARACTER(20),
   LOT_SIZE INTEGER,
   PRODUCT_SPEC_CODE CHARACTER(22),
   REFERENCE_NUMBER INTEGER,
   STATUS CHARACTER(1),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT BLOCK_LOAD_PK PRIMARY KEY
     (MC_NUMBER)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.BLOCK_LOAD_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.BLOCK_LOAD_TBX IS 'RMT BlockLoad';

CREATE TRIGGER GALADM.BLOCK_LOAD_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.BLOCK_LOAD_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.BLOCK_LOAD_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.BLOCK_LOAD_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX GALADM.BLOCK_LOAD_I1
  ON GALADM.BLOCK_LOAD_TBX
    ( PRODUCTION_LOT, STATUS )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_LOAD_I2
  ON GALADM.BLOCK_LOAD_TBX
    ( STATUS )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE TABLE GALADM.BLOCK_TBX (
   BLOCK_ID VARCHAR(17) NOT NULL,
   MC_SERIAL_NUMBER VARCHAR(17),
   DC_SERIAL_NUMBER VARCHAR(17),
   ENGINE_SERIAL_NUMBER VARCHAR(17),
   MODEL VARCHAR(12),
   TRACKING_STATUS VARCHAR(12),
   DUNNAGE VARCHAR(12),
   DEFECT_STATUS SMALLINT,
   HOLD_STATUS SMALLINT DEFAULT 0 NOT NULL,
   LAST_PASSING_PROCESS_POINT_ID CHARACTER(16),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT BLOCK_PK PRIMARY KEY
     (BLOCK_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.BLOCK_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.BLOCK_TBX IS 'RMT Block';

CREATE TRIGGER GALADM.BLOCK_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.BLOCK_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.BLOCK_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.BLOCK_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX GALADM.BLOCK_I1
  ON GALADM.BLOCK_TBX
    ( ENGINE_SERIAL_NUMBER )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_I2
  ON GALADM.BLOCK_TBX
    ( DC_SERIAL_NUMBER )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_I3
  ON GALADM.BLOCK_TBX
    ( DUNNAGE )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_I4
  ON GALADM.BLOCK_TBX
    ( LAST_PASSING_PROCESS_POINT_ID )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_I5
  ON GALADM.BLOCK_TBX
    ( MC_SERIAL_NUMBER )
  ALLOW REVERSE SCANS
  COMPRESS NO;

 CREATE TABLE GALADM.GAL198_HIST_TBX (
   PRODUCT_ID CHARACTER(17) NOT NULL DEFAULT '',
   PART_NAME CHARACTER(32) NOT NULL DEFAULT '',
   MEASUREMENT_SEQUENCE_NUMBER INTEGER NOT NULL DEFAULT 0,
   MEASUREMENT_ATTEMPT INTEGER NOT NULL DEFAULT 0,
   MEASUREMENT_VALUE DOUBLE,
   MEASUREMENT_STATUS INTEGER,
   ACTUAL_TIMESTAMP TIMESTAMP,
   MEASUREMENT_ANGLE DOUBLE,
   PART_SERIAL_NUMBER VARCHAR(255),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT GAL198_HIST_PK PRIMARY KEY
     (PRODUCT_ID, PART_NAME, MEASUREMENT_SEQUENCE_NUMBER, MEASUREMENT_ATTEMPT)
 )
   IN GALTBSDAT3
   INDEX IN GALTBSIDX1;

 ALTER TABLE GALADM.GAL198_HIST_TBX
   DATA CAPTURE CHANGES INCLUDE LONGVAR COLUMNS
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

COMMENT ON TABLE GALADM.GAL198_HIST_TBX IS
   'RMT Measurement Attempt History for LOT CONTROL';

CREATE TRIGGER GALADM.GAL198_HIST_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.GAL198_HIST_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.GAL198_HIST_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.GAL198_HIST_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

 CREATE INDEX GALADM.GAL198_HIST_I1
   ON GALADM.GAL198_HIST_TBX
     ( PRODUCT_ID ASC, PART_NAME ASC, ACTUAL_TIMESTAMP ASC, MEASUREMENT_VALUE ASC, MEASUREMENT_ATTEMPT ASC )
   ALLOW REVERSE SCANS
   COMPRESS NO;

CREATE TABLE GALADM.GTS_PRODUCT_TBX (
   TRACKING_AREA VARCHAR(10) NOT NULL,
   PRODUCT_ID VARCHAR(40) NOT NULL,
   SHORT_PROD_ID VARCHAR(20),
   LOT_NUMBER VARCHAR(20),
   KD_LOT_NUMBER VARCHAR(18),
   MODEL_YEAR CHARACTER(1),
   MODEL_CODE VARCHAR(5),
   MODEL_TYPE VARCHAR(5),
   MODEL_OPTION VARCHAR(5),
   INT_COLOR_CODE VARCHAR(5),
   EXT_COLOR_CODE VARCHAR(10),
   HOLD_STATUS SMALLINT DEFAULT 0,
   DEFECT_STATUS SMALLINT,
   INSPECTION_STATUS SMALLINT DEFAULT 0,
   PRODUCT_SEQ SMALLINT DEFAULT 0 NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT GTS_PRODUCT_PK PRIMARY KEY
     (TRACKING_AREA,PRODUCT_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.GTS_PRODUCT_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.GTS_PRODUCT_TBX IS 'RMT GtsProduct';

CREATE TRIGGER GALADM.GTS_PRODUCT_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.GTS_PRODUCT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.GTS_PRODUCT_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.GTS_PRODUCT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE ALIAS GALADM.HCM_GTS_PRODUCT_TBX FOR GALADM.GTS_PRODUCT_TBX;

COMMENT ON ALIAS GALADM.HCM_GTS_PRODUCT_TBX IS 'RMT alias to GTS_PRODUCT_TBX';

CREATE TABLE GALADM.HEAD_BUILD_RESULTS_TBX (
   HEAD_ID VARCHAR(17) NOT NULL,
   PART_NAME VARCHAR(32) DEFAULT ' ' NOT NULL,
   ACTUAL_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
   RESULT_VALUE VARCHAR(30),
   INSTALLED_PART_STATUS INTEGER,
   ASSOCIATE_NO VARCHAR(11),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT HEAD_BUILD_RESULTS_PK PRIMARY KEY
     (HEAD_ID,PART_NAME)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.HEAD_BUILD_RESULTS_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.HEAD_BUILD_RESULTS_TBX IS 'RMT HeadBuildResult';

CREATE TRIGGER GALADM.HEAD_BUILD_RESULTS_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.HEAD_BUILD_RESULTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.HEAD_BUILD_RESULTS_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.HEAD_BUILD_RESULTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.HEAD_HISTORY_TBX (
   HEAD_ID VARCHAR(17) NOT NULL,
   PROCESS_POINT_ID CHARACTER(16) DEFAULT ' ' NOT NULL,
   ACTUAL_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
   UPDATE_TIMESTAMP TIMESTAMP,
   PROCESS_COUNT INTEGER DEFAULT 1 NOT NULL,
   CONSTRAINT HEAD_HISTORY_PK PRIMARY KEY
     (HEAD_ID,PROCESS_POINT_ID,ACTUAL_TIMESTAMP)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.HEAD_HISTORY_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.HEAD_HISTORY_TBX IS 'RMT HeadHistory';

CREATE TRIGGER GALADM.HEAD_HISTORY_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.HEAD_HISTORY_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.HEAD_HISTORY_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.HEAD_HISTORY_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX GALADM.HEAD_HISTORY_I1
  ON GALADM.HEAD_HISTORY_TBX
    ( PROCESS_POINT_ID, ACTUAL_TIMESTAMP )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE TABLE GALADM.HEAD_TBX (
   HEAD_ID VARCHAR(17) NOT NULL,
   MC_SERIAL_NUMBER VARCHAR(17),
   DC_SERIAL_NUMBER VARCHAR(17),
   ENGINE_SERIAL_NUMBER VARCHAR(17),
   MODEL VARCHAR(12),
   TRACKING_STATUS VARCHAR(12),
   DUNNAGE VARCHAR(12),
   DEFECT_STATUS SMALLINT,
   HOLD_STATUS SMALLINT DEFAULT 0 NOT NULL,
   ENGINE_FIRING_FLAG SMALLINT DEFAULT 0 NOT NULL,
   LAST_PASSING_PROCESS_POINT_ID CHARACTER(16),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT HEAD_PK PRIMARY KEY
     (HEAD_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.HEAD_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.HEAD_TBX IS 'RMT Head';

CREATE TRIGGER GALADM.HEAD_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.HEAD_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.HEAD_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.HEAD_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX GALADM.HEAD_I1
  ON GALADM.HEAD_TBX
    ( ENGINE_SERIAL_NUMBER )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.HEAD_I2
  ON GALADM.HEAD_TBX
    ( DC_SERIAL_NUMBER )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.HEAD_I3
  ON GALADM.HEAD_TBX
    ( DUNNAGE )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.HEAD_I4
  ON GALADM.HEAD_TBX
    ( LAST_PASSING_PROCESS_POINT_ID )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE TABLE GALADM.HOLD_PARM_TBX (
   HOLD_ID BIGINT NOT NULL,
   DEPARTMENT CHARACTER(2) NOT NULL,
   MACHINE_NUMBER VARCHAR(50) NOT NULL,
   DIE_NUMBER VARCHAR(80) NOT NULL,
   START_DATE DATE NOT NULL,
   STOP_DATE DATE NOT NULL,
   HOLD_REASON VARCHAR(80) NOT NULL,
   HOLD_ASSOCIATE_ID VARCHAR(11) NOT NULL,
   HOLD_ASSOCIATE_NAME VARCHAR(30) NOT NULL,
   ACTUAL_TIMESTAMP TIMESTAMP NOT NULL,
   RELEASE_FLAG SMALLINT NOT NULL,
   RELEASE_ASSOCIATE_ID VARCHAR(11),
   RELEASE_ASSOCIATE_NAME VARCHAR(30),
   RELEASE_TIMESTAMP TIMESTAMP,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   QSR_ID INTEGER,
   CONSTRAINT HOLD_PARM_PK PRIMARY KEY
     (HOLD_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.HOLD_PARM_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.HOLD_PARM_TBX IS 'RMT HoldParm';

CREATE TRIGGER GALADM.HOLD_PARM_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.HOLD_PARM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.HOLD_PARM_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.HOLD_PARM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.HOST_PRIORITY_PLAN_TBX (
   AFAE_FLAG CHARACTER(1) NOT NULL,
   PLAN_CODE CHARACTER(11) NOT NULL,
   LINE_NUMBER CHARACTER(2) NOT NULL,
   PLAN_PROC_LOC CHARACTER(2) NOT NULL,
   WE_LINE_NUMBER CHARACTER(2) NOT NULL,
   WE_PLAN_PROC_LOC CHARACTER(2) NOT NULL,
   PA_LINE_NUMBER CHARACTER(2) NOT NULL,
   PA_PLAN_PROC_LOC CHARACTER(2) NOT NULL,
   AFAE_OFF_DATE DATE NOT NULL,
   PROD_SEQ_NUMBER CHARACTER(12) NOT NULL,
   DEMAND_TYPE CHARACTER(2) NOT NULL,
   KD_LOT_NO CHARACTER(18) NOT NULL,
   MODEL_YEAR_CODE CHARACTER(1) NOT NULL,
   MODEL_CODE CHARACTER(3) NOT NULL,
   MODEL_TYPE_CODE CHARACTER(3) NOT NULL,
   MODEL_OPTION CHARACTER(3) NOT NULL,
   EXT_COLOUR_CODE CHARACTER(10) NOT NULL,
   INT_COLOUR_CODE CHARACTER(2) NOT NULL,
   NO_OF_UNITS INTEGER NOT NULL,
   START_VIN_NUMBER CHARACTER(17) NOT NULL,
   REMAKE_FLAG CHARACTER(1) NOT NULL,
   Y_N_FLAG CHARACTER(1) NOT NULL,
   CARRY_I_O_FLAG CHARACTER(1) NOT NULL,
   NO_OF_UNITS_CICO INTEGER NOT NULL,
   PLAN_CREATED CHARACTER(1) NOT NULL,
   CREATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
   ROW_PROCESSED CHARACTER(1) DEFAULT 'N' NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT HOST_PRIORITY_PLAN_PK PRIMARY KEY
     (AFAE_FLAG,PLAN_CODE,LINE_NUMBER,PLAN_PROC_LOC,WE_LINE_NUMBER,WE_PLAN_PROC_LOC,PA_LINE_NUMBER,PA_PLAN_PROC_LOC,AFAE_OFF_DATE,PROD_SEQ_NUMBER,CREATE_DATE)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.HOST_PRIORITY_PLAN_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.HOST_PRIORITY_PLAN_TBX IS 'RMT HostPriorityPlan';

CREATE TRIGGER GALADM.HOST_PRIORITY_PLAN_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.HOST_PRIORITY_PLAN_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.HOST_PRIORITY_PLAN_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.HOST_PRIORITY_PLAN_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE ALIAS GALADM.HCM_TGA3051 FOR GALADM.HOST_PRIORITY_PLAN_TBX;

COMMENT ON ALIAS GALADM.HCM_TGA3051 IS 'RMT alias to HOST_PRIORITY_PLAN_TBX';

CREATE TABLE GALADM.PART_LOT_TBX (
  PART_SERIAL_NUMBER CHARACTER(30) NOT NULL,
  PART_NUMBER CHARACTER(30) NOT NULL,
  PART_NAME CHARACTER(32) NOT NULL,
  STATUS SMALLINT DEFAULT 0,
  STARTING_QUANTITY INTEGER DEFAULT 0,
  CURRENT_QUANTITY INTEGER DEFAULT 0,
  COMMENT VARCHAR(256),
  CREATE_TIMESTAMP TIMESTAMP,
  UPDATE_TIMESTAMP TIMESTAMP,
  CONSTRAINT PART_LOT_PK PRIMARY KEY
    (PART_SERIAL_NUMBER, PART_NAME, PART_NUMBER)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.PART_LOT_TBX
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.PART_LOT_TBX IS
   'RMT PartLot for tracking quantity of parts installed from a lot';

CREATE TRIGGER GALADM.PART_LOT_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.PART_LOT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.PART_LOT_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.PART_LOT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

ALTER TABLE GALADM.PART_SPEC_TBX
  DATA CAPTURE NONE;

ALTER TABLE GALADM.PART_SPEC_TBX
  ALTER COLUMN COMMENT
    SET DATA TYPE VARCHAR(256);

ALTER TABLE GALADM.PART_SPEC_TBX
  DATA CAPTURE CHANGES;

REORG TABLE GALADM.PART_SPEC_TBX;

DROP TRIGGER GALADM.PART_SPEC_TR2;
DROP TRIGGER GALADM.PART_SPEC_TR1;

CREATE TRIGGER GALADM.PART_SPEC_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.PART_SPEC_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.PART_SPEC_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.PART_SPEC_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

COMMENT ON TABLE GALADM.PART_SPEC_TBX IS
   'RMT PartSpec for LOT CONTROL to define Installed Part Spec';

CREATE TABLE GALADM.PLC_MEMORY_MAP_TBX (
  METRIC VARCHAR(160) NOT NULL,
  DATA_TYPE CHARACTER(30),
  MEMORY_BANK CHARACTER(30),
  START_ADDRESS CHARACTER(30),
  BIT CHARACTER(30),
  BYTE_ORDER CHARACTER(30),
  LENGTH INTEGER,
  CREATE_TIMESTAMP TIMESTAMP,
  UPDATE_TIMESTAMP TIMESTAMP,
  CONSTRAINT HMIN_MEM_PK PRIMARY KEY
    (METRIC)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.PLC_MEMORY_MAP_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.PLC_MEMORY_MAP_TBX IS
   'RMT PlcMemoryMapItem for LOT CONTROL to manage PLC Memory Map';

CREATE TRIGGER GALADM.PLC_MEMORY_MAP_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.PLC_MEMORY_MAP_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.PLC_MEMORY_MAP_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.PLC_MEMORY_MAP_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

COMMENT ON TABLE GALADM.PRODUCT_PRIORITY_PLAN_TBX IS
   'RMT ProductPriorityPlan for LINE to manage sequence of product orders for a given tracking line';

COMMENT ON GALADM.PRODUCT_PRIORITY_PLAN_TBX (
 PLAN_STATUS_ID IS 'Link to PLAN_STATUS_TBX' );

DROP TRIGGER GALADM.HCMSEQUENCETR2;
DROP TRIGGER GALADM.HCMSEQUENCETR1;
DROP TABLE GALADM.HCM_PRODUCT_SEQUENCE_TBX;

CREATE TABLE GALADM.PRODUCT_SEQUENCE_TBX (
   PRODUCT_ID CHARACTER(17) NOT NULL,
   PROCESS_POINT_ID CHARACTER(16) NOT NULL,
   REFERENCE_TIMESTAMP TIMESTAMP NOT NULL,
   ASSOCIATE_NO CHARACTER(11),
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT PRODUCT_SEQUENCE_PK PRIMARY KEY
     (PRODUCT_ID,PROCESS_POINT_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.PRODUCT_SEQUENCE_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.PRODUCT_SEQUENCE_TBX IS 'RMT ProductSequence';

CREATE TRIGGER GALADM.PRODUCT_SEQUENCE_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.PRODUCT_SEQUENCE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.PRODUCT_SEQUENCE_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.PRODUCT_SEQUENCE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.PRODUCT_SPEC_CODE_TBX (
  PRODUCT_SPEC_CODE CHARACTER(22) NOT NULL,
  PRODUCT_TYPE CHARACTER(10) NOT NULL,
  MODEL_YEAR_CODE CHARACTER(1),
  MODEL_CODE CHARACTER(3),
  MODEL_TYPE_CODE CHARACTER(3),
  MODEL_OPTION_CODE CHARACTER(3),
  EXT_COLOR_CODE CHARACTER(10),
  INT_COLOR_CODE CHARACTER(3),
  MODEL_YEAR_DESCRIPTION CHARACTER(4),
  CREATE_TIMESTAMP TIMESTAMP,
  UPDATE_TIMESTAMP TIMESTAMP,
  CONSTRAINT PRODUCT_SPEC_CODE_PK PRIMARY KEY
    (PRODUCT_SPEC_CODE,PRODUCT_TYPE)
)
  IN GALTBSDAT6
  INDEX IN GALTBSIDX2;

ALTER TABLE GALADM.PRODUCT_SPEC_CODE_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.PRODUCT_SPEC_CODE_TBX IS
   'RMT ProductTypeData for defining the different product types';

CREATE TRIGGER GALADM.PRODUCT_SPEC_CODE_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.PRODUCT_SPEC_CODE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.PRODUCT_SPEC_CODE_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.PRODUCT_SPEC_CODE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

COMMENT ON TABLE GALADM.PRODUCT_TYPE_TBX IS
   'RMT ProductTypeData for defining the different product types';

CREATE TABLE GALADM.QUORUM_DETAIL_TBX (
   QUORUM_DATE DATE NOT NULL,
   QUORUM_ID INTEGER NOT NULL,
   QUORUM_SEQ INTEGER NOT NULL,
   KD_LOT CHARACTER(18),
   YMTO  CHARACTER(9),
   ENGINE_NUMBER CHARACTER(12),
   STATUS INTEGER DEFAULT 0 NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT QUORUM_DETAIL_PK PRIMARY KEY
     (QUORUM_DATE,QUORUM_ID,QUORUM_SEQ)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.QUORUM_DETAIL_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.QUORUM_DETAIL_TBX IS 'RMT ShippingQuorumDetail';

CREATE TRIGGER GALADM.QUORUM_DETAIL_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.QUORUM_DETAIL_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.QUORUM_DETAIL_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.QUORUM_DETAIL_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE INDEX QUORUM_DETAIL_I1
  ON GALADM.QUORUM_DETAIL_TBX
    ( ENGINE_NUMBER, QUORUM_ID, QUORUM_DATE )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE TABLE GALADM.QUORUM_TBX (
   QUORUM_DATE DATE NOT NULL,
   QUORUM_ID INTEGER NOT NULL,
   TRAILER_ID INTEGER NOT NULL,
   TRAILER_ROW INTEGER NOT NULL,
   PALLET_TYPE VARCHAR(5) NOT NULL,
   QUORUM_SIZE INTEGER NOT NULL,
   STATUS INTEGER NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT QUORUM_PK PRIMARY KEY
     (QUORUM_DATE,QUORUM_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.QUORUM_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.QUORUM_TBX IS 'RMT ShippingQuorum';

CREATE TRIGGER GALADM.QUORUM_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.QUORUM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.QUORUM_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.QUORUM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE UNIQUE INDEX QUORUM_I1
  ON GALADM.QUORUM_TBX
    ( QUORUM_ID, QUORUM_DATE, TRAILER_ID )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX QUORUM_I2
  ON GALADM.QUORUM_TBX
    ( STATUS )
  ALLOW REVERSE SCANS
  COMPRESS NO;

DROP TRIGGER GALADM.HCMREQUIREDPARTSTR2;
DROP TRIGGER GALADM.HCMREQUIREDPARTSTR1;
DROP TABLE GALADM.HCM_REQUIRED_PARTS_TBX;

CREATE TABLE GALADM.REQUIRED_PARTS_TBX (
   PROCESS_POINT_ID CHARACTER(16) DEFAULT ' ' NOT NULL,
   MODEL_YEAR_CODE CHARACTER(1) DEFAULT ' ' NOT NULL,
   MODEL_CODE CHARACTER(3) DEFAULT ' ' NOT NULL,
   MODEL_TYPE_CODE CHARACTER(3) DEFAULT ' ' NOT NULL,
   MODEL_OPTION_CODE CHARACTER(3) DEFAULT ' ' NOT NULL,
   INT_COLOR_CODE CHARACTER(2) DEFAULT ' ' NOT NULL,
   EXT_COLOR_CODE CHARACTER(10) DEFAULT ' ' NOT NULL,
   PART_NAME CHARACTER(32) DEFAULT ' ' NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   SUB_ID CHARACTER(2),
   CONSTRAINT REQUIRED_PARTS_PK PRIMARY KEY
     (PROCESS_POINT_ID,MODEL_YEAR_CODE,MODEL_CODE,MODEL_TYPE_CODE,MODEL_OPTION_CODE,INT_COLOR_CODE,EXT_COLOR_CODE,PART_NAME)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.REQUIRED_PARTS_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.REQUIRED_PARTS_TBX IS 'RMT RequiredPart';

CREATE TRIGGER GALADM.REQUIRED_PARTS_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.REQUIRED_PARTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.REQUIRED_PARTS_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.REQUIRED_PARTS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.SKIPPED_PRODUCT_TBX (
  PRODUCT_ID CHARACTER(17) NOT NULL,
  PROCESS_POINT_ID CHARACTER(16) NOT NULL,
  SUB_ID CHARACTER(2),
  PRODUCT_TYPE CHARACTER(10),
  KD_LOT_NUMBER CHARACTER(18),
  PRODUCTION_LOT CHARACTER(20),
  PRODUCT_SPEC_CODE CHARACTER(22),
  STATUS SMALLINT DEFAULT 0,
  SKIP_TIMESTAMP TIMESTAMP,
  DISABLE_TIMESTAMP TIMESTAMP,
  CREATE_TIMESTAMP TIMESTAMP,
  UPDATE_TIMESTAMP TIMESTAMP,
  CONSTRAINT SKIPPED_PRODUCT_PK PRIMARY KEY
    (PRODUCT_ID, PROCESS_POINT_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.SKIPPED_PRODUCT_TBX
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.SKIPPED_PRODUCT_TBX IS
   'RMT SkippedProduct for tracking which products were skipped per plan';

CREATE TRIGGER GALADM.SKIP_PRODUCT_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.SKIPPED_PRODUCT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.SKIP_PRODUCT_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.SKIPPED_PRODUCT_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.STANDARD_SCHEDULE_TBX (
   PLANT_CODE CHARACTER(4) DEFAULT '' NOT NULL,
   LINE_NO CHARACTER(2) DEFAULT '' NOT NULL,
   PROCESS_LOCATION CHARACTER(2) DEFAULT '' NOT NULL,
   DAY_OF_WEEK CHARACTER(3) NOT NULL,
   SHIFT CHARACTER(2) DEFAULT '' NOT NULL,
   PERIOD INTEGER DEFAULT 0 NOT NULL,
   PERIOD_LABEL CHARACTER(5),
   TYPE CHARACTER(3),
   PLAN CHARACTER(1),
   START_TIME TIMESTAMP,
   END_TIME TIMESTAMP,
   NEXT_DAY SMALLINT DEFAULT 0,
   CAPACITY INTEGER DEFAULT 0,
   CAPACITY_ON INTEGER DEFAULT 0,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT STANDARD_SCHEDULE_PK PRIMARY KEY
     (PLANT_CODE,LINE_NO,PROCESS_LOCATION,DAY_OF_WEEK,SHIFT,PERIOD)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.STANDARD_SCHEDULE_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.STANDARD_SCHEDULE_TBX IS 'RMT StandardSchedule';

CREATE TRIGGER GALADM.STANDARD_SCHEDULE_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.STANDARD_SCHEDULE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.STANDARD_SCHEDULE_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.STANDARD_SCHEDULE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

COMMENT ON TABLE GALADM.SUB_PRODUCT_TBX IS
   'RMT SubProduct for subassembly products';

CREATE ALIAS GALADM.TEMPLATES_TBX FOR GALADM.HMIN_TEMPLATES_TBX;

COMMENT ON ALIAS GALADM.TEMPLATES_TBX IS
   'RMT alias to HMIN_TEMPLATES_TBX Template for LOT CONTROL to define Printing Templates';

CREATE TABLE GALADM.TRAILER_INFO_TBX (
   TRAILER_ID INTEGER NOT NULL,
   TRAILER_NUMBER VARCHAR(10),
   SCH_QTY INTEGER NOT NULL,
   ACT_QTY INTEGER DEFAULT 0 NOT NULL,
   STATUS INTEGER,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT TRAILER_INFO_PK PRIMARY KEY
     (TRAILER_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.TRAILER_INFO_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.TRAILER_INFO_TBX IS 'RMT ShippingTrailerInfo';

CREATE TRIGGER GALADM.TRAILER_INFO_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.TRAILER_INFO_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.TRAILER_INFO_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.TRAILER_INFO_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.TRAILER_STATUS_TBX (
   TRAILER_ID INTEGER NOT NULL,
   STATUS INTEGER NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT TRAILER_STATUS_PK PRIMARY KEY
     (TRAILER_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.TRAILER_STATUS_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.TRAILER_STATUS_TBX IS 'RMT ShippingTrailerStatus';

CREATE TRIGGER GALADM.TRAILER_STATUS_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.TRAILER_STATUS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.TRAILER_STATUS_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.TRAILER_STATUS_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TABLE GALADM.VANNING_SCHEDULE_TBX (
   PRODUCTION_DATE DATE NOT NULL,
   VANNING_SEQ INTEGER NOT NULL,
   TRAILER_ID INTEGER,
   KD_LOT CHARACTER(18) NOT NULL,
   PRODUCTION_LOT CHARACTER(20) NOT NULL,
   YMTO CHARACTER(9) NOT NULL,
   SCH_QTY INTEGER NOT NULL,
   ACT_QTY INTEGER DEFAULT 0 NOT NULL,
   CREATE_TIMESTAMP TIMESTAMP,
   UPDATE_TIMESTAMP TIMESTAMP,
   CONSTRAINT VANNING_SCHEDULE_PK PRIMARY KEY
     (PRODUCTION_DATE,VANNING_SEQ)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.VANNING_SCHEDULE_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.VANNING_SCHEDULE_TBX IS 'RMT ShippingVanningSchedule';

CREATE TRIGGER GALADM.VANNING_SCHEDULE_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.VANNING_SCHEDULE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.VANNING_SCHEDULE_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.VANNING_SCHEDULE_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE ALIAS GALADM.HCM_VANNING_SCHEDULE_TBX FOR GALADM.VANNING_SCHEDULE_TBX;

COMMENT ON ALIAS GALADM.HCM_VANNING_SCHEDULE_TBX IS
   'RMT alias to VANNING_SCHEDULE_TBX';

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.BLOCK_BUILD_RESULTS_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.BLOCK_BUILD_RESULTS_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.BLOCK_HISTORY_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.BLOCK_HISTORY_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.BLOCK_LOAD_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.BLOCK_LOAD_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.BLOCK_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.BLOCK_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.GAL198_HIST_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.GAL198_HIST_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.GTS_PRODUCT_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.GTS_PRODUCT_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.HEAD_BUILD_RESULTS_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.HEAD_BUILD_RESULTS_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.HEAD_HISTORY_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.HEAD_HISTORY_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.HEAD_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.HEAD_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.HOLD_PARM_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.HOLD_PARM_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.HOST_PRIORITY_PLAN_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.HOST_PRIORITY_PLAN_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.PART_LOT_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.PART_LOT_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.PRODUCT_SEQUENCE_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.PRODUCT_SEQUENCE_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.PRODUCT_SPEC_CODE_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.PRODUCT_SPEC_CODE_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.QUORUM_DETAIL_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.QUORUM_DETAIL_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.QUORUM_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.QUORUM_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.REQUIRED_PARTS_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.REQUIRED_PARTS_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.SKIPPED_PRODUCT_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.SKIPPED_PRODUCT_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.STANDARD_SCHEDULE_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.STANDARD_SCHEDULE_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.TRAILER_INFO_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.TRAILER_INFO_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.TRAILER_STATUS_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.TRAILER_STATUS_TBX TO GROUP GALCPR_S;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE GALADM.VANNING_SCHEDULE_TBX TO GROUP GALCPR_A;
GRANT SELECT ON TABLE GALADM.VANNING_SCHEDULE_TBX TO GROUP GALCPR_S;
