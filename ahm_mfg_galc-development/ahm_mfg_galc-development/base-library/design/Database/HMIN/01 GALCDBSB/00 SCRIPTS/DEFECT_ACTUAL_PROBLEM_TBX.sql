DROP ALIAS HCM_GAL492TBX;
DROP TRIGGER GALADM.DEFECT_ACTUAL_PROBLEM_TR2;
DROP TRIGGER GALADM.DEFECT_ACTUAL_PROBLEM_TR1;
DROP TABLE GALADM.DEFECT_ACTUAL_PROBLEM_TBX;

CREATE TABLE GALADM.DEFECT_ACTUAL_PROBLEM_TBX (
   PROBLEM_ID                      INTEGER NOT NULL,
   INSPECTION_PART_NAME            VARCHAR (32) NOT NULL,
   INSPECTION_PART_LOCATION_NAME   VARCHAR (20) NOT NULL,
   DEFECT_TYPE_NAME                VARCHAR (45) NOT NULL,
   SECONDARY_PART_NAME             VARCHAR (20) NOT NULL,
   TWO_PART_PAIR_PART              VARCHAR (32) NOT NULL,
   TWO_PART_PAIR_LOCATION          VARCHAR (20) NOT NULL,
   PART_GROUP_NAME                 CHARACTER (20) NOT NULL,
   ACTUAL_PROBLEM_NAME             VARCHAR (64) NOT NULL,
   CREATE_TIMESTAMP                TIMESTAMP,
   UPDATE_TIMESTAMP                TIMESTAMP,
   CONSTRAINT DEFECT_ACTUAL_PROBLEM_PK PRIMARY KEY
     (PROBLEM_ID)
) 
  IN GALTBSDAT8
  INDEX IN GALTBSIDX3;

ALTER TABLE GALADM.DEFECT_ACTUAL_PROBLEM_TBX
  DATA CAPTURE CHANGES INCLUDE LONGVAR COLUMNS
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.DEFECT_ACTUAL_PROBLEM_TBX IS
   'RMT DefectActualProblem';

CREATE TRIGGER GALADM.DEFECT_ACTUAL_PROBLEM_TR1
   NO CASCADE BEFORE INSERT
   ON GALADM.DEFECT_ACTUAL_PROBLEM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET CREATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.DEFECT_ACTUAL_PROBLEM_TR2
   NO CASCADE BEFORE UPDATE
   ON GALADM.DEFECT_ACTUAL_PROBLEM_TBX
   REFERENCING NEW AS A
   FOR EACH ROW
SET UPDATE_TIMESTAMP = CURRENT_TIMESTAMP;

CREATE UNIQUE INDEX GALADM.DEFECT_ACTUAL_PROBLEM_I1
  ON GALADM.DEFECT_ACTUAL_PROBLEM_TBX
    ( INSPECTION_PART_NAME ASC, INSPECTION_PART_LOCATION_NAME ASC, DEFECT_TYPE_NAME ASC, SECONDARY_PART_NAME ASC, TWO_PART_PAIR_PART ASC, TWO_PART_PAIR_LOCATION ASC, PART_GROUP_NAME ASC, ACTUAL_PROBLEM_NAME ASC )
  ALLOW REVERSE SCANS
  COMPRESS NO;
  
CREATE ALIAS HCM_GAL492TBX FOR GALADM.DEFECT_ACTUAL_PROBLEM_TBX;
COMMENT ON ALIAS GALADM.HCM_GAL492TBX IS 'RMT alias to DEFECT_ACTUAL_PROBLEM_TBX';