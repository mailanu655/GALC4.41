DROP ALIAS GALADM.HCM_BLOCK_LOAD_TBX;
DROP TRIGGER GALADM.BLOCK_LOAD_TR2;
DROP TRIGGER GALADM.BLOCK_LOAD_TR1;
DROP TABLE GALADM.BLOCK_LOAD_TBX;

CREATE TABLE GALADM.BLOCK_LOAD_TBX (
   MC_NUMBER	CHARACTER(20) NOT NULL,
   PRODUCTION_LOT	CHARACTER(20),
   LOT_SIZE	INTEGER,
   PRODUCT_SPEC_CODE	CHARACTER(22),
   REFERENCE_NUMBER	INTEGER,
   STATUS	CHARACTER(1),
   CREATE_TIMESTAMP	TIMESTAMP,
   UPDATE_TIMESTAMP	TIMESTAMP,
   CONSTRAINT BLOCK_LOAD_PK PRIMARY KEY 
     (MC_NUMBER)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.BLOCK_LOAD_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.BLOCK_LOAD_TBX IS 'RMT BlockLoad';
    
CREATE TRIGGER GALADM.BLOCK_LOAD_TR1
  NO CASCADE BEFORE INSERT
  ON GALADM.BLOCK_LOAD_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET CREATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.BLOCK_LOAD_TR2
  NO CASCADE BEFORE UPDATE
  ON GALADM.BLOCK_LOAD_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET UPDATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE INDEX GALADM.BLOCK_LOAD_I1
  ON GALADM.BLOCK_LOAD_TBX
    ( PRODUCTION_LOT, STATUS )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE INDEX GALADM.BLOCK_LOAD_I2
  ON GALADM.BLOCK_LOAD_TBX
    ( STATUS )
  ALLOW REVERSE SCANS
  COMPRESS NO;

CREATE ALIAS GALADM.HCM_BLOCK_LOAD_TBX FOR GALADM.BLOCK_LOAD_TBX;
COMMENT ON ALIAS GALADM.HCM_BLOCK_LOAD_TBX IS 'RMT alias to BLOCK_LOAD_TBX';