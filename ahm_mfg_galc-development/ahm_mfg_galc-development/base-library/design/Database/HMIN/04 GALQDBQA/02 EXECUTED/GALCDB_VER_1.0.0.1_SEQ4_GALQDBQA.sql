-- <ScriptOptions statementTerminator="@" />
--Drop all database objects that are used to calculate metrics in the correct order
DROP PROCEDURE GALINST1.TEST_HMIN_PP_METRICS_U_PROC@
DROP SPECIFIC PROCEDURE GALINST1.SQL080706080958800@

DROP PROCEDURE GALADM.HMIN_PP_METRICS_U_PROC@
DROP PROCEDURE GALADM.HMIN_PP_METRICS_I_PROC@

DROP FUNCTION GALADM.HMIN_GET_PRODUCTION_DATE_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL120203111412000@ 
DROP FUNCTION GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL120203111411700@ 
DROP FUNCTION GALADM.HMIN_GET_SCHEDULE_ID_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL120203111411300@ 
DROP FUNCTION GALADM.HMIN_GET_SHIFT_END_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL080706080958104@
DROP FUNCTION GALADM.HMIN_GET_SHIFT_START_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL080706080958105@
DROP FUNCTION GALADM.HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC@
DROP FUNCTION GALADM.HMIN_GET_VQ_OFF_TIMESTAMP_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL080706080957701@ 
DROP FUNCTION GALADM.HMIN_GET_VQ_OFF_FUNC@
DROP SPECIFIC FUNCTION GALADM.SQL080706080957700@ 

CREATE FUNCTION GALADM.HMIN_GET_VQ_OFF_FUNC ( )
  RETURNS VARCHAR(16)
  SPECIFIC HMIN_GET_VQ_OFF_FUNC
  LANGUAGE SQL
  NOT DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
			RETURN 'PP10090';--
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_VQ_OFF_FUNC IS
'Return the VQ OFF Process Point ID'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_VQ_OFF_FUNC TO GROUP GALQQA_A@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_VQ_OFF_FUNC TO GROUP GALQQA_S@

CREATE FUNCTION GALADM.HMIN_GET_VQ_OFF_TIMESTAMP_FUNC ( PRODUCT_ID_IN VARCHAR(17) )
  RETURNS TIMESTAMP
  SPECIFIC HMIN_GET_VQ_OFF_TIMESTAMP_FUNC
  LANGUAGE SQL
  NOT DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
	RETURN SELECT MIN(T.ACTUAL_TIMESTAMP)
		FROM GALADM.GAL215TBX T
		WHERE T.PRODUCT_ID = PRODUCT_ID_IN
		AND T.PROCESS_POINT_ID = GALADM.HMIN_GET_VQ_OFF_FUNC()
		GROUP BY T.PRODUCT_ID,T.PROCESS_POINT_ID;--
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_VQ_OFF_TIMESTAMP_FUNC IS
'Given a PRODUCT_ID determine the first time it went VQ OFF'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_VQ_OFF_TIMESTAMP_FUNC TO GROUP GALQQA_A@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_VQ_OFF_TIMESTAMP_FUNC TO GROUP GALQQA_S@

CREATE FUNCTION GALADM.HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC(
	END_IN TIMESTAMP  )
	RETURNS BIGINT
	SPECIFIC HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC
	NO EXTERNAL ACTION
------------------------------------------------------------------------
-- SQL Function HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC
	
-- This function is to determine the number of VINS between AF_OFF and VQ_SHIP
-- as of the END_IN date

-- Alan Study
-- 20080606	
-- Initial Creation
-- This function has LINE57, LINE58, PP10088, PP10096 HARD CODED!!!!
-- Need to figure out a way to remove this hard coding.

------------------------------------------------------------------------	
BEGIN ATOMIC
	DECLARE INV BIGINT;--

	SET INV = (select
				count(distinct Product.product_id) as AF_OFF_VQ_SHIP_INV
				from
				GALADM.gal215tbx ProduCt 
				INNER JOIN GALADM.gal143tbx Frame 
				 ON Product.product_id = Frame.product_id
				LEFT JOIN GALADM.GAL177TBX Repair
				 ON Frame.PRODUCT_ID=Repair.PRODUCT_ID
				where Frame.tracking_status != 'LINE57'
				  and Frame.tracking_status != 'LINE58'
				  and Product.process_point_id = 'PP10088'
				  and Product.product_id in
			    (select AF_OFF.product_id
			      from GALADM.gal215tbx AF_OFF
			      where AF_OFF.process_point_id = 'PP10088'
					 AND AF_OFF.ACTUAL_TIMESTAMP <= END_IN
			      except
			      select VQ_SHIP.product_id
			      from GALADM.gal215tbx VQ_SHIP
			      where process_point_id = 'PP10096'
					 AND VQ_SHIP.ACTUAL_TIMESTAMP <= END_IN));--				
	RETURN INV;--
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC IS
'Given an END TIMESTAMP determine the number of VINS between AF_OFF and VQ_SHIP'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC TO GROUP GALQQA_A@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_AF_OFF_VQ_SHIP_INV_FUNC TO GROUP GALQQA_S@

CREATE FUNCTION GALADM.HMIN_GET_SHIFT_START_FUNC (
    PROCESS_POINT_ID_IN	VARCHAR(16),
    PRODUCTION_DATE_IN	DATE,
    SHIFT_IN	VARCHAR(2) )
  RETURNS TIMESTAMP
  SPECIFIC HMIN_GET_SHIFT_START_FUNC
  LANGUAGE SQL
  NOT DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
	RETURN SELECT MIN(S.START_TIMESTAMP) SHIFT_START
		FROM GALADM.GAL226TBX S
		INNER JOIN GALADM.GAL238TBX G
		ON S.PLANT_CODE=G.GPCS_PLANT_CODE
		AND S.LINE_NO=G.GPCS_LINE_NO
		AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
		INNER JOIN GALADM.GAL128TBX D
		ON G.DIVISION_ID=D.DIVISION_ID
		INNER JOIN GALADM.GAL214TBX P
		ON D.DIVISION_ID=P.DIVISION_ID
		WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
		AND S.PRODUCTION_DATE=PRODUCTION_DATE_IN
		AND S.SHIFT=SHIFT_IN;--
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_SHIFT_START_FUNC IS
'Given a PROCESS POINT ID, PRODUCTION DATE, SHIFT determine the SHIFT START TIMESTAMP'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SHIFT_START_FUNC TO GROUP GALQQA_A@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SHIFT_START_FUNC TO GROUP GALQQA_S@

CREATE FUNCTION GALADM.HMIN_GET_SHIFT_END_FUNC (
    PROCESS_POINT_ID_IN	VARCHAR(16),
    PRODUCTION_DATE_IN	DATE,
    SHIFT_IN	VARCHAR(2) )
  RETURNS TIMESTAMP
  SPECIFIC HMIN_GET_SHIFT_END_FUNC
  LANGUAGE SQL
  NOT DETERMINISTIC
  NO EXTERNAL ACTION
  READS SQL DATA
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
	RETURN SELECT MAX(S.END_TIMESTAMP) SHIFT_END
		FROM GALADM.GAL226TBX S
		INNER JOIN GALADM.GAL238TBX G
		ON S.PLANT_CODE=G.GPCS_PLANT_CODE
		AND S.LINE_NO=G.GPCS_LINE_NO
		AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
		INNER JOIN GALADM.GAL128TBX D
		ON G.DIVISION_ID=D.DIVISION_ID
		INNER JOIN GALADM.GAL214TBX P
		ON D.DIVISION_ID=P.DIVISION_ID
		WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
		AND S.PRODUCTION_DATE=PRODUCTION_DATE_IN
		AND S.SHIFT=SHIFT_IN;--
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_SHIFT_END_FUNC IS
'Given a PROCESS POINT ID, PRODUCTION DATE, SHIFT determine the SHIFT END TIMESTAMP'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SHIFT_END_FUNC TO GROUP GALQQA_A@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SHIFT_END_FUNC TO GROUP GALQQA_S@

CREATE FUNCTION GALADM.HMIN_GET_SCHEDULE_ID_FUNC(
 PROCESS_POINT_ID_IN VARCHAR(16),
 ACTUAL_TIMESTAMP_IN TIMESTAMP)
 RETURNS BIGINT
 SPECIFIC HMIN_GET_SCHEDULE_ID_FUNC
 DETERMINISTIC 
 NO EXTERNAL ACTION
------------------------------------------------------------------------
-- SQL Function GALADM.HMIN_GET_SCHEDULE_ID_FUNC
	-- PROCESS_POINT_ID_IN 
	-- ACTUAL_TIMESTAMP_IN

-- This function is to return  the schedule id 
-- given the process point id and the actual timestamp 
	
-- Sriram Shanmugavel
-- 20090610	
-- Initial Creation

------------------------------------------------------------------------ 
BEGIN ATOMIC
 RETURN SELECT MIN(S.SCHEDULE_ID)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
    ON S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL128TBX D
   ON G.LOCATION_LEVEL_ID=D.DIVISION_ID
  INNER JOIN GALADM.GAL214TBX P
   ON D.DIVISION_ID=P.DIVISION_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL  
  
  UNION 
  
  SELECT MIN(S.SCHEDULE_ID)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
   ON  S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL195TBX L
   ON G.LOCATION_LEVEL_ID=L.LINE_ID
  INNER JOIN GALADM.GAL214TBX P
   ON L.LINE_ID=P.LINE_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL
  FETCH FIRST 1 ROW ONLY;
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_SCHEDULE_ID_FUNC IS
'Given a Process Point ID and actual timestamp return the schedule id from the schedule table'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SCHEDULE_ID_FUNC TO GROUP GALQQA_S@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_SCHEDULE_ID_FUNC TO GROUP GALQQA_A@

CREATE FUNCTION GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC(
 PROCESS_POINT_ID_IN VARCHAR(16),
 ACTUAL_TIMESTAMP_IN TIMESTAMP)
 RETURNS VARCHAR(2)
 SPECIFIC HMIN_GET_PRODUCTION_SHIFT_FUNC
 DETERMINISTIC
 NO EXTERNAL ACTION
------------------------------------------------------------------------
-- SQL Function GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC
	-- PROCESS_POINT_ID_IN 
	-- ACTUAL_TIMESTAMP_IN

-- This function is to return  the produdction shift 
-- given the process point id and the actual timestamp 
	
-- Sriram Shanmugavel
-- 20090610	
-- Initial Creation

------------------------------------------------------------------------

BEGIN ATOMIC
 RETURN SELECT MIN(S.SHIFT)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
	ON S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL128TBX D
   ON G.LOCATION_LEVEL_ID=D.DIVISION_ID
  INNER JOIN GALADM.GAL214TBX P
   ON D.DIVISION_ID=P.DIVISION_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL  
  
  UNION 
  
  SELECT MIN(S.SHIFT)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
   ON  S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL195TBX L
   ON G.LOCATION_LEVEL_ID=L.LINE_ID
  INNER JOIN GALADM.GAL214TBX P
   ON L.LINE_ID=P.LINE_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL
  FETCH FIRST 1 ROW ONLY;
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC IS
'Given a Process Point ID and actual timestamp return the production shift from the schedule table'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC TO GROUP GALQQA_S@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_PRODUCTION_SHIFT_FUNC TO GROUP GALQQA_A@

CREATE FUNCTION GALADM.HMIN_GET_PRODUCTION_DATE_FUNC(
 PROCESS_POINT_ID_IN VARCHAR(16),
 ACTUAL_TIMESTAMP_IN TIMESTAMP)
 RETURNS DATE
 SPECIFIC HMIN_GET_PRODUCTION_DATE_FUNC
 DETERMINISTIC
 NO EXTERNAL ACTION
------------------------------------------------------------------------
-- SQL Function GALADM.HMIN_GET_PRODUCTION_DATE_FUNC
	-- PROCESS_POINT_ID_IN 
	-- ACTUAL_TIMESTAMP_IN

-- This function is to return  the produdction date 
-- given the process point id and the actual timestamp 
	
-- Sriram Shanmugavel
-- 20090610	
-- Initial Creation

------------------------------------------------------------------------
 
BEGIN ATOMIC
 RETURN SELECT MIN(S.PRODUCTION_DATE)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
    ON S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL128TBX D
   ON G.LOCATION_LEVEL_ID=D.DIVISION_ID
  INNER JOIN GALADM.GAL214TBX P
   ON D.DIVISION_ID=P.DIVISION_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL  
  
  UNION 
  
  SELECT MIN(S.PRODUCTION_DATE)
  FROM GALADM.GAL226TBX S
  INNER JOIN GALADM.HMIN_GPCS_GALC_MAP_TBX G
   ON  S.LINE_NO=G.GPCS_LINE_NO
    AND S.PROCESS_LOCATION=G.GPCS_PROCESS_LOCATION
  INNER JOIN GALADM.GAL195TBX L
   ON G.LOCATION_LEVEL_ID=L.LINE_ID
  INNER JOIN GALADM.GAL214TBX P
   ON L.LINE_ID=P.LINE_ID
  WHERE P.PROCESS_POINT_ID=PROCESS_POINT_ID_IN
  AND S.START_TIMESTAMP <= ACTUAL_TIMESTAMP_IN AND ACTUAL_TIMESTAMP_IN <= S.END_TIMESTAMP
  HAVING MIN(S.SCHEDULE_ID) IS NOT NULL
  FETCH FIRST 1 ROW ONLY;
END@

COMMENT ON FUNCTION GALADM.HMIN_GET_PRODUCTION_DATE_FUNC IS
'Given a Process Point ID and actual timestamp return the production date from the schedule table'@

GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_PRODUCTION_DATE_FUNC TO GROUP GALQQA_S@
GRANT EXECUTE ON FUNCTION GALADM.HMIN_GET_PRODUCTION_DATE_FUNC TO GROUP GALQQA_A@
