--Populate GALADM.MC_VIOS_MASTER_OP_TBX with latest approved revision data from GALADM.MC_OP_REV_TBX

INSERT INTO galadm.MC_VIOS_MASTER_OP_TBX(VIOS_PLATFORM_ID, UNIT_NO, OP_VIEW, OP_PROCESSOR, COMMON_NAME)
(SELECT DISTINCT SUBSTR(OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(OPERATION_NAME, 1, 6) AS UNIT_NO, OP_VIEW, OP_PROCESSOR, '' AS COMMON_NAME
FROM galadm.MC_OP_REV_TBX WHERE APPROVED IS NOT NULL and DEPRECATED IS NULL);

--Populate GALADM.MC_VIOS_MASTER_OP_CHECKER_TBX with latest approved revision data from GALADM.MC_OP_CHECKER_TBX

INSERT INTO galadm.MC_VIOS_MASTER_OP_CHECKER_TBX(VIOS_PLATFORM_ID, UNIT_NO, CHECK_POINT, CHECK_SEQ, CHECK_NAME, CHECKER, REACTION_TYPE)
(SELECT DISTINCT SUBSTR(opc.OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(opc.OPERATION_NAME, 1, 6) AS UNIT_NO, opc.CHECK_POINT, opc.CHECK_SEQ, opc.CHECK_NAME, opc.CHECKER, opc.REACTION_TYPE
FROM galadm.MC_OP_CHECKER_TBX opc
JOIN galadm.MC_OP_REV_TBX op ON opc.OPERATION_NAME=op.OPERATION_NAME AND opc.OP_REV=op.OP_REV
WHERE op.APPROVED IS NOT NULL and op.DEPRECATED IS NULL);

--Populate GALADM.MC_VIOS_MASTER_OP_PART_TBX with latest approved part revision data from GALADM.MC_OP_PART_REV_TBX

INSERT INTO galadm.MC_VIOS_MASTER_OP_PART_TBX(VIOS_PLATFORM_ID, UNIT_NO, PART_NO, PART_SECTION_CODE, PART_ITEM_NO, PART_TYPE, PART_DESC, PART_VIEW, PART_PROCESSOR, DEVICE_ID, DEVICE_MSG,
PART_MASK, PART_MARK, MEASUREMENT_COUNT, PART_CHECK)
(SELECT  DISTINCT * FROM
((SELECT SUBSTR(OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(OPERATION_NAME, 1, 6) AS UNIT_NO, 
(CASE 
	WHEN COALESCE(PART_SECTION_CODE,'') <> '' and COALESCE(PART_ITEM_NO,'') <> ''
		THEN COALESCE(PART_NO,'')
	ELSE '' 
	END
) AS PART_NO,
COALESCE(PART_SECTION_CODE,'') AS PART_SECTION_CODE, 
COALESCE(PART_ITEM_NO,'') AS PART_ITEM_NO, 
PART_TYPE, PART_DESC, PART_VIEW,
PART_PROCESSOR, DEVICE_ID, DEVICE_MSG, PART_MASK, PART_MARK, MEASUREMENT_COUNT, PART_CHECK 
FROM galadm.MC_OP_PART_REV_TBX
WHERE APPROVED IS NOT NULL and DEPRECATED IS NULL AND PART_TYPE='MFG' and PART_MASK IS NOT NULL and PART_MASK <> '*' and PART_MASK <> '')
UNION
(SELECT SUBSTR(a.OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(a.OPERATION_NAME, 1, 6) AS UNIT_NO, 
(CASE 
	WHEN COALESCE(a.PART_SECTION_CODE,'') <> '' and COALESCE(a.PART_ITEM_NO,'') <> ''
		THEN COALESCE(a.PART_NO,'')
	ELSE '' 
	END
) AS PART_NO,
COALESCE(a.PART_SECTION_CODE,''), 
COALESCE(a.PART_ITEM_NO,''), 
a.PART_TYPE, a.PART_DESC, 
a.PART_VIEW, a.PART_PROCESSOR, a.DEVICE_ID, a.DEVICE_MSG, 
a.PART_MASK, a.PART_MARK, a.MEASUREMENT_COUNT, a.PART_CHECK 
FROM galadm.MC_OP_PART_REV_TBX a
JOIN galadm.MC_OP_REV_TBX b on a.OPERATION_NAME=b.OPERATION_NAME and a.REV_ID=b.REV_ID and b.APPROVED IS NOT NULL and b.DEPRECATED IS NULL
JOIN galadm.MC_OP_PART_CHECKER_TBX c on a.OPERATION_NAME=c.OPERATION_NAME and a.PART_ID=c.PART_ID and b.OP_REV=c.OP_REV
WHERE a.APPROVED IS NOT NULL and a.DEPRECATED IS NULL AND a.PART_TYPE='MFG' and (a.PART_MASK IS NULL or a.PART_MASK = '*' or a.PART_MASK = ''))) as temp);

--Populate GALADM.MC_VIOS_MASTER_OP_PART_CHECKER_TBX with latest part checker data of approved part from GALADM.MC_OP_PART_CHECKER_TBX

INSERT INTO galadm.MC_VIOS_MASTER_OP_PART_CHECKER_TBX (VIOS_PLATFORM_ID,UNIT_NO,PART_NO,PART_SECTION_CODE,PART_ITEM_NO,CHECK_POINT,CHECK_SEQ,CHECK_NAME,CHECKER,REACTION_TYPE) 
(SELECT DISTINCT SUBSTR(a.OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(a.OPERATION_NAME, 1, 6) AS UNIT_NO, 
(CASE 
	WHEN COALESCE(a.PART_SECTION_CODE,'') <> '' and COALESCE(a.PART_ITEM_NO,'') <> ''
		THEN COALESCE(a.PART_NO,'')
	ELSE '' 
	END
) AS PART_NO,
COALESCE(a.PART_SECTION_CODE,'') AS PART_SECTION_CODE, 
COALESCE(a.PART_ITEM_NO,'') AS PART_ITEM_NO, 
c.CHECK_POINT, c.CHECK_SEQ,
c.CHECK_NAME, c.CHECKER, c.REACTION_TYPE
FROM galadm.MC_OP_PART_REV_TBX a
JOIN galadm.MC_OP_REV_TBX b on a.OPERATION_NAME=b.OPERATION_NAME and a.REV_ID=b.REV_ID and b.APPROVED IS NOT NULL and b.DEPRECATED IS NULL
JOIN galadm.MC_OP_PART_CHECKER_TBX c on a.OPERATION_NAME=c.OPERATION_NAME and a.PART_ID=c.PART_ID and b.OP_REV=c.OP_REV
WHERE a.APPROVED IS NOT NULL and a.DEPRECATED IS NULL AND a.PART_TYPE='MFG');

--Populate GALADM.MC_VIOS_MASTER_OP_MEAS_TBX with latest approved measurement data from GALADM.MC_OP_MEAS_TBX

INSERT INTO GALADM.MC_VIOS_MASTER_OP_MEAS_TBX(VIOS_PLATFORM_ID, UNIT_NO, PART_NO, PART_SECTION_CODE, PART_ITEM_NO, PART_TYPE, 
OP_MEAS_SEQ_NUM, DEVICE_ID, DEVICE_MSG, MIN_LIMIT, MAX_LIMIT, MEAS_CHECK, MEAS_MAX_ATTEMPTS, MEAS_VIEW, MEAS_PROCESSOR, MEAS_TIME, MEAS_TYPE) 
(SELECT DISTINCT SUBSTR(a.OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(a.OPERATION_NAME, 1, 6) AS UNIT_NO, 
(CASE 
	WHEN COALESCE(b.PART_SECTION_CODE,'') <> '' and COALESCE(b.PART_ITEM_NO,'') <> ''
		THEN COALESCE(b.PART_NO,'')
	ELSE '' 
	END
) AS PART_NO,
COALESCE(b.PART_SECTION_CODE,'') AS PART_SECTION_CODE, 
COALESCE(b.PART_ITEM_NO,'') AS PART_ITEM_NO, b.PART_TYPE, 
a.OP_MEAS_SEQ_NUM, a.DEVICE_ID, a.DEVICE_MSG, a.MIN_LIMIT, a.MAX_LIMIT, a.MEAS_CHECK, a.MEAS_MAX_ATTEMPTS, a.MEAS_VIEW, a.MEAS_PROCESSOR,
a.MEAS_TIME, a.MEAS_TYPE
FROM galadm.MC_OP_MEAS_TBX a
JOIN galadm.MC_OP_PART_REV_TBX b on a.OPERATION_NAME=b.OPERATION_NAME and a.PART_ID=b.PART_ID and a.PART_REV=b.PART_REV
WHERE b.APPROVED IS NOT NULL and b.DEPRECATED IS NULL AND PART_TYPE='MFG');

--Populate GALADM.MC_VIOS_MASTER_OP_MEAS_CHECKER_TBX with latest measurement checker data from GALADM.MC_OP_MEAS_CHECKER_TBX

INSERT INTO galadm.MC_VIOS_MASTER_OP_MEAS_CHECKER_TBX(VIOS_PLATFORM_ID, UNIT_NO, PART_NO, PART_SECTION_CODE, PART_ITEM_NO, OP_MEAS_SEQ_NUM, 
CHECK_POINT, CHECK_SEQ, CHECK_NAME, CHECKER, REACTION_TYPE)
(SELECT DISTINCT SUBSTR(a.OPERATION_NAME, 8) AS VIOS_PLATFORM_ID, SUBSTR(a.OPERATION_NAME, 1, 6) AS UNIT_NO, 
(CASE 
	WHEN COALESCE(b.PART_SECTION_CODE,'') <> '' and COALESCE(b.PART_ITEM_NO,'') <> ''
		THEN COALESCE(b.PART_NO,'')
	ELSE '' 
	END
) AS PART_NO,
COALESCE(b.PART_SECTION_CODE,'') AS PART_SECTION_CODE, 
COALESCE(b.PART_ITEM_NO,'') AS PART_ITEM_NO,
d.OP_MEAS_SEQ_NUM, d.CHECK_POINT, d.CHECK_SEQ, d.CHECK_NAME, d.CHECKER, d.REACTION_TYPE 
FROM galadm.MC_OP_MEAS_TBX a
JOIN galadm.MC_OP_PART_REV_TBX b on a.OPERATION_NAME=b.OPERATION_NAME and a.PART_ID=b.PART_ID and a.PART_REV=b.PART_REV
JOIN galadm.MC_OP_REV_TBX c on b.OPERATION_NAME=c.OPERATION_NAME and b.REV_ID=c.REV_ID and c.APPROVED IS NOT NULL and c.DEPRECATED IS NULL
JOIN galadm.MC_OP_MEAS_CHECKER_TBX d on a.OPERATION_NAME=d.OPERATION_NAME and b.PART_ID=d.PART_ID and c.OP_REV=d.OP_REV
WHERE b.APPROVED IS NOT NULL and b.DEPRECATED IS NULL AND b.PART_TYPE='MFG');
