------------------------------------------------
-- DDL Statements for Table "GALADM  "."QI_REPAIR_METHOD_TBX"
------------------------------------------------

DROP TRIGGER GALADM.QI_REPAIR_METHOD_TR1;
DROP TRIGGER GALADM.QI_REPAIR_METHOD_TR2;
DROP TABLE GALADM.QI_REPAIR_METHOD_TBX;

CREATE TABLE GALADM.QI_REPAIR_METHOD_TBX
(
	REPAIR_METHOD		  VARCHAR(64) NOT NULL ,
	REPAIR_METHOD_DESCRIPTION  VARCHAR(256),
	PRODUCT_KIND          CHAR(18),
	ACTIVE                SMALLINT,
	APP_CREATE_TIMESTAMP  TIMESTAMP,
	APP_UPDATE_TIMESTAMP  TIMESTAMP,
	CREATE_TIMESTAMP      TIMESTAMP,
	UPDATE_TIMESTAMP      TIMESTAMP,
	CREATE_USER           CHAR(11),
	UPDATE_USER           CHAR(11) )
 	IN GALTBSREF11 INDEX IN GALTBSIDX4 ;

COMMENT ON TABLE GALADM.QI_REPAIR_METHOD_TBX IS 'NAQ Repair Method';

CREATE UNIQUE INDEX GALADM.QI_REPAIR_METHOD_I1
  ON GALADM.QI_REPAIR_METHOD_TBX (REPAIR_METHOD);

ALTER TABLE GALADM.QI_REPAIR_METHOD_TBX 
	ADD CONSTRAINT QI_REPAIR_METHOD_PK PRIMARY KEY (REPAIR_METHOD);
	
ALTER TABLE GALADM.QI_REPAIR_METHOD_TBX 
	ADD CONSTRAINT QI_REPAIR_METHOD_C1 CHECK 
		(CREATE_USER = UPPER(CREATE_USER));

ALTER TABLE GALADM.QI_REPAIR_METHOD_TBX  
	ADD CONSTRAINT QI_REPAIR_METHOD_C2 CHECK 
		(UPDATE_USER = UPPER(UPDATE_USER));

ALTER TABLE GALADM.QI_REPAIR_METHOD_TBX 
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

CREATE TRIGGER GALADM.QI_REPAIR_METHOD_TR1
  NO CASCADE BEFORE INSERT
  ON GALADM.QI_REPAIR_METHOD_TBX
  REFERENCING NEW AS A
  FOR EACH ROW
  SET CREATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.QI_REPAIR_METHOD_TR2
  NO CASCADE BEFORE UPDATE
  ON GALADM.QI_REPAIR_METHOD_TBX
  REFERENCING NEW AS A
  FOR EACH ROW
  SET UPDATE_TIMESTAMP=CURRENT_TIMESTAMP;
  
  
------------------------------------------------
-- DDL Statements for Table "GALADM  "."QI_REPAIR_METHOD_PROCESS_POINT_TBX"
------------------------------------------------

DROP TRIGGER GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TR1;
DROP TRIGGER GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TR2;
DROP TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX;

CREATE TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX
(
	PROCESS_POINT_ID      CHARACTER(16) NOT NULL ,
	REPAIR_METHOD		  VARCHAR(64) NOT NULL ,
	CREATE_TIMESTAMP      TIMESTAMP,
	UPDATE_TIMESTAMP      TIMESTAMP,
	CREATE_USER           CHAR(11),
	UPDATE_USER           CHAR(11) )
 	IN GALTBSREF11 INDEX IN GALTBSIDX4 ;

COMMENT ON TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX IS 'NAQ Repair Method by Process Point';

CREATE UNIQUE INDEX GALADM.QI_REPAIR_METHOD_PROCESS_POINT_I1
  ON GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX (PROCESS_POINT_ID, REPAIR_METHOD);

ALTER TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX 
	ADD CONSTRAINT QI_REPAIR_METHOD_PROCESS_POINT_PK PRIMARY KEY (PROCESS_POINT_ID, REPAIR_METHOD);
	
ALTER TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX 
	ADD CONSTRAINT QI_REPAIR_METHOD_PROCESS_POINT_C1 CHECK 
		(CREATE_USER = UPPER(CREATE_USER));

ALTER TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX  
	ADD CONSTRAINT QI_REPAIR_METHOD_PROCESS_POINT_C2 CHECK 
		(UPDATE_USER = UPPER(UPDATE_USER));

ALTER TABLE GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX 
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

CREATE TRIGGER GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TR1
  NO CASCADE BEFORE INSERT
  ON GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX
  REFERENCING NEW AS A
  FOR EACH ROW
  SET CREATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TR2
  NO CASCADE BEFORE UPDATE
  ON GALADM.QI_REPAIR_METHOD_PROCESS_POINT_TBX
  REFERENCING NEW AS A
  FOR EACH ROW
  SET UPDATE_TIMESTAMP=CURRENT_TIMESTAMP;
        
      
