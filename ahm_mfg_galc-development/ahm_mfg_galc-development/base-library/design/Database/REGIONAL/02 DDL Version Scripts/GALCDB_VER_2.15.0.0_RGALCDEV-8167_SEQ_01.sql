-- Create table MC_VIOS_MASTER_PLATFORM_TBX
DROP TRIGGER GALADM.MC_VIOS_MASTER_PLATFORM_TR2;
DROP TRIGGER GALADM.MC_VIOS_MASTER_PLATFORM_TR1;
DROP TABLE GALADM.MC_VIOS_MASTER_PLATFORM_TBX;

CREATE TABLE GALADM.MC_VIOS_MASTER_PLATFORM_TBX (
   VIOS_PLATFORM_ID 	CHARACTER(17) 	NOT NULL,
   PLANT_LOC_CODE		CHARACTER(1)	NOT NULL,
   DEPT_CODE			CHARACTER(2)	NOT NULL,
   MODEL_YEAR_DATE		DECIMAL(5, 1)	NOT NULL,
   PROD_SCH_QTY			DECIMAL(5, 1)	NOT NULL,
   PROD_ASM_LINE_NO		CHARACTER(1)	NOT NULL,
   VEHICLE_MODEL_CODE	CHARACTER(1)	NOT NULL,
   CREATE_TIMESTAMP		TIMESTAMP,
   UPDATE_TIMESTAMP		TIMESTAMP,
   CONSTRAINT MC_VIOS_MASTER_PLATFORM_PK PRIMARY KEY 
     (VIOS_PLATFORM_ID)
)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.MC_VIOS_MASTER_PLATFORM_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.MC_VIOS_MASTER_PLATFORM_TBX IS 'RMT MC_VIOS_MASTER_PLATFORM is used by Manufacturing Control to create master of PDDA platform that is Plant Loc Code, Dept Code, Model Year Date, Prod Sch Qty, Prod ASM Line No, Vehicle Model Code';
    
CREATE TRIGGER GALADM.MC_VIOS_MASTER_PLATFORM_TR1
  NO CASCADE BEFORE INSERT
  ON GALADM.MC_VIOS_MASTER_PLATFORM_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET CREATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.MC_VIOS_MASTER_PLATFORM_TR2
  NO CASCADE BEFORE UPDATE
  ON GALADM.MC_VIOS_MASTER_PLATFORM_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET UPDATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE UNIQUE INDEX GALADM.MC_VIOS_MASTER_PLATFORM_I1
  ON GALADM.MC_VIOS_MASTER_PLATFORM_TBX
    ( PLANT_LOC_CODE, DEPT_CODE, MODEL_YEAR_DATE, PROD_SCH_QTY, PROD_ASM_LINE_NO, VEHICLE_MODEL_CODE)
  ALLOW REVERSE SCANS
  COMPRESS NO;
  
-- Create table MC_VIOS_MASTER_ASM_PROC_TBX
DROP TRIGGER GALADM.MC_VIOS_MASTER_ASM_PROC_TR2;
DROP TRIGGER GALADM.MC_VIOS_MASTER_ASM_PROC_TR1;
DROP TABLE GALADM.MC_VIOS_MASTER_ASM_PROC_TBX;

CREATE TABLE GALADM.MC_VIOS_MASTER_ASM_PROC_TBX (
   VIOS_PLATFORM_ID 	CHARACTER(17) 	NOT NULL,
   ASM_PROC_NO			VARCHAR(5)		NOT NULL,
   PROCESS_POINT_ID 	CHARACTER(16)	NOT NULL,
   PROCESS_SEQ_NUM  	INTEGER			NOT NULL,
   CREATE_TIMESTAMP		TIMESTAMP,
   UPDATE_TIMESTAMP		TIMESTAMP)
  IN GALTBSREF12
  INDEX IN GALTBSIDX4;

ALTER TABLE GALADM.MC_VIOS_MASTER_ASM_PROC_TBX
  DATA CAPTURE CHANGES
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMENT ON TABLE GALADM.MC_VIOS_MASTER_ASM_PROC_TBX IS 'RMT MC_VIOS_MASTER_ASM_PROC is used by Manufacturing Control to create master of linkages between PDDA ASM Proc No and GALC Process Point';
    
CREATE TRIGGER GALADM.MC_VIOS_MASTER_ASM_PROC_TR1
  NO CASCADE BEFORE INSERT
  ON GALADM.MC_VIOS_MASTER_ASM_PROC_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET CREATE_TIMESTAMP=CURRENT_TIMESTAMP;

CREATE TRIGGER GALADM.MC_VIOS_MASTER_ASM_PROC_TR2
  NO CASCADE BEFORE UPDATE
  ON GALADM.MC_VIOS_MASTER_ASM_PROC_TBX
  REFERENCING 
    NEW AS A
  FOR EACH ROW
SET UPDATE_TIMESTAMP=CURRENT_TIMESTAMP;

ALTER TABLE GALADM.MC_VIOS_MASTER_ASM_PROC_TBX
  ADD CONSTRAINT MC_VIOS_MASTER_ASM_PROC_PK PRIMARY KEY 
     (VIOS_PLATFORM_ID, ASM_PROC_NO);
     
-- Add PROCESS_SEQ_NUM Column in MC_STRUCTURE_TBX
ALTER TABLE GALADM.MC_STRUCTURE_TBX ADD PROCESS_SEQ_NUM INTEGER NOT NULL DEFAULT 0;

-- Create Procedure to Migrate data
SET CURRENT SCHEMA = "GALADM ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","SYSIBMADM","GALADM";
CREATE OR REPLACE PROCEDURE GALADM.MC_STRUCTURE_MIGRATION
()
LANGUAGE SQL
SPECIFIC GALADM.PROC_MC_STRUC_MIG
BEGIN
DECLARE nCount INTEGER;--
DECLARE p_curr_date TIMESTAMP;--
SET p_curr_date= CURRENT_TIMESTAMP;--
SET nCount = 1;--
WHILE nCount <> 0 
DO 
    UPDATE 
        (SELECT * FROM GALADM.MC_STRUCTURE_TBX U
                WHERE 
                EXISTS (SELECT P.PROCESS_SEQ_NUM FROM GALADM.MC_PDDA_PLATFORM_TBX P WHERE U.PDDA_PLATFORM_ID = P.PDDA_PLATFORM_ID) 
                AND U.PROCESS_SEQ_NUM=0 
                AND (U.UPDATE_TIMESTAMP IS NULL OR  U.UPDATE_TIMESTAMP < p_curr_date)
                FETCH FIRST 20000 ROWS ONLY
        ) S 
        SET S.PROCESS_SEQ_NUM = (SELECT P.PROCESS_SEQ_NUM FROM GALADM.MC_PDDA_PLATFORM_TBX P WHERE S.PDDA_PLATFORM_ID = P.PDDA_PLATFORM_ID);--
        
   GET DIAGNOSTICS nCount = ROW_COUNT;--
   COMMIT;--
END WHILE;--
END ;
