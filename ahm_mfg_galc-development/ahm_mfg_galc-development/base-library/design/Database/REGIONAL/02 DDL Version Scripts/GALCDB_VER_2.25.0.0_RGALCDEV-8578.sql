CREATE UNIQUE INDEX "GALADM "."QI_LOCAL_DEFECT_COMBINATION_I6" ON "GALADM "."QI_LOCAL_DEFECT_COMBINATION_TBX"
("REGIONAL_DEFECT_COMBINATION_ID" ASC, "ENTRY_MODEL" ASC, "ENTRY_SCREEN" ASC, "IS_USED" ASC)  ALLOW REVERSE SCANS;

-- In case of duplicates (same REGIONAL_DEFECT_COMBINATION_ID, ENTRY_MODEL, ENTRY_SCREEN, IS_USED) existing in 
-- QI_LOCAL_DEFECT_COMBINATION_TBX, use the query below to get the list of duplicates 
-- and manually choose and delete the duplicates unwanted before creating the unique index above

SELECT REPLACE(REPLACE(REPLACE(C.INSPECTION_PART_NAME || ' ' || COALESCE(C.INSPECTION_PART_LOCATION_NAME, '') || ' ' || 
COALESCE(C.INSPECTION_PART_LOCATION2_NAME, '') || ' ' || COALESCE(C.INSPECTION_PART2_NAME,'')|| ' ' || 
COALESCE(C.INSPECTION_PART2_LOCATION_NAME, '') || ' ' || COALESCE(C.INSPECTION_PART2_LOCATION2_NAME, '') || ' ' || 
COALESCE(C.INSPECTION_PART3_NAME, ''),' ','{}'),'}{',''),'{}',' ') AS FULL_PART_DESC, 
B.DEFECT_TYPE_NAME AS PRIMARY_DEFECT, B.DEFECT_TYPE_NAME2 AS SECONDARY_DEFECT, A.* 
FROM QI_LOCAL_DEFECT_COMBINATION_TBX A, QI_REGIONAL_DEFECT_COMBINATION_TBX B, QI_PART_LOCATION_COMBINATION_TBX C 
WHERE (A.REGIONAL_DEFECT_COMBINATION_ID, A.ENTRY_MODEL, A.ENTRY_SCREEN, A.IS_USED) IN 
(SELECT REGIONAL_DEFECT_COMBINATION_ID, ENTRY_MODEL, ENTRY_SCREEN, IS_USED FROM QI_LOCAL_DEFECT_COMBINATION_TBX 
GROUP BY REGIONAL_DEFECT_COMBINATION_ID, ENTRY_MODEL, ENTRY_SCREEN, IS_USED HAVING COUNT(*) > 1) 
AND A.REGIONAL_DEFECT_COMBINATION_ID=B.REGIONAL_DEFECT_COMBINATION_ID AND B.PART_LOCATION_ID=C.PART_LOCATION_ID;
