package com.honda.galc.dao.jpa.conf;

import java.util.List;

import com.honda.galc.dao.conf.MCMdrsTrainingDao;
import com.honda.galc.dao.jpa.BaseDaoImpl;
import com.honda.galc.entity.conf.MCMdrsTraining;
import com.honda.galc.entity.conf.MCMdrsTrainingId;

/**
 * @author Subu Kathiresan
 * @date May 30, 2014
 */
public class MCMdrsTrainingDaoImpl extends BaseDaoImpl<MCMdrsTraining, MCMdrsTrainingId> implements MCMdrsTrainingDao {
	
	

	
	private final String TRAINING_MAPPED_QUERY = "SELECT VIOS_MAST_PROC.PROCESS_POINT_ID, MDRS_TR.USER_LOGON_ID_NO, PF.PDDA_PLATFORM_ID,MDRS_TR.PROCESS_ID, MDRS_TR.MODEL_YEAR_DATE, " +
											" MDRS_TR.MTC_MODEL, CAST(MDRS_TR.MODEL_YEAR_DATE AS CHARACTER(4)) AS MODEL_YEAR_DATE_STR, MDRS_TR.ENTERED_TSTP AS TRAINED, " +
											" 'MDRS' AS TRAINING_METHOD, MDRSTRAINING.USER_LOGON_ID_NO AS IS_MAPPED, MDRS_TR.KNOWLEDGESTATUS_NO, MDRS_TR.EXTRACT_DATE, " +
											" MDRS_TR.PLANT_LOC_CODE, MDRS_TR.DEPT_CODE  " +
											" FROM (SELECT tm.TEAM_ID, tm.PLANT_LOC_CODE, tm.DEPT_CODE, tm.MODEL_YEAR_DATE, tm.PROD_SCH_QTY, " +
											" tm.VEHICLE_MODEL_CODE, tm.PROD_ASM_LINE_NO, tm.TEAM_NO, pr.PROCESS_ID, pr.ASM_PROC_NO, tr.USER_LOGON_ID_NO, " +
											" tr.MTC_MODEL, tr.KNOWLEDGESTATUS_NO, tr.ENTERED_TSTP, tr.EXTRACT_DATE " +
											" FROM VIOS.PVLTM1 tm " +
											" INNER JOIN VIOS.PVLPR1 pr  ON (tm.TEAM_ID = pr.TEAM_ID) " +
											" INNER JOIN VIOS.TBLKNOWLEDGESTATUS tr  ON (tm.MODEL_YEAR_DATE = tr.MODEL_YEAR_DATE " +
											" AND tm.PROD_ASM_LINE_NO = tr.PROCLINENO AND tm.TEAM_NO = tr.PROCTEAM AND tm.PROD_SCH_QTY = tr.PRODRATE " +
											" AND tm.PLANT_LOC_CODE = tr.PLANT_LOC_CODE AND tm.DEPT_CODE = tr.DEPT_CODE AND pr.ASM_PROC_NO = tr.PROCESS_NO)) MDRS_TR " +
											" INNER JOIN GALADM.MC_PDDA_PLATFORM_TBX PF ON     (MDRS_TR.PLANT_LOC_CODE = PF.PLANT_LOC_CODE " +
											" AND MDRS_TR.DEPT_CODE = PF.DEPT_CODE AND MDRS_TR.MODEL_YEAR_DATE = PF.MODEL_YEAR_DATE " +
											" AND MDRS_TR.PROD_SCH_QTY = PF.PROD_SCH_QTY AND MDRS_TR.PROD_ASM_LINE_NO = PF.PROD_ASM_LINE_NO " +
											" AND MDRS_TR.VEHICLE_MODEL_CODE = PF.VEHICLE_MODEL_CODE AND MDRS_TR.ASM_PROC_NO = PF.ASM_PROC_NO " +
											" AND PF.APPROVED < CURRENT_TIMESTAMP AND (CURRENT_TIMESTAMP < PF.DEPRECATED OR PF.DEPRECATED IS NULL)) " +
											" INNER JOIN GALADM.MC_VIOS_MASTER_PLATFORM_TBX VIOS_MAST_PLAT ON PF.PLANT_LOC_CODE=VIOS_MAST_PLAT.PLANT_LOC_CODE AND PF.DEPT_CODE=VIOS_MAST_PLAT.DEPT_CODE AND PF.MODEL_YEAR_DATE=VIOS_MAST_PLAT.MODEL_YEAR_DATE AND PF.PROD_SCH_QTY=VIOS_MAST_PLAT.PROD_SCH_QTY AND PF.PROD_ASM_LINE_NO=VIOS_MAST_PLAT.PROD_ASM_LINE_NO AND PF.VEHICLE_MODEL_CODE=VIOS_MAST_PLAT.VEHICLE_MODEL_CODE " +
											" INNER JOIN GALADM.MC_VIOS_MASTER_ASM_PROC_TBX VIOS_MAST_PROC ON VIOS_MAST_PLAT.VIOS_PLATFORM_ID=VIOS_MAST_PROC.VIOS_PLATFORM_ID AND PF.ASM_PROC_NO=VIOS_MAST_PROC.ASM_PROC_NO " +
											" LEFT JOIN GALADM.MC_MDRS_TRAINING_TBX MDRSTRAINING ON (MDRSTRAINING.USER_LOGON_ID_NO = MDRS_TR.USER_LOGON_ID_NO " +
											" AND MDRSTRAINING.PROCESS_ID = MDRS_TR.PROCESS_ID  " +
											" AND MDRSTRAINING.MODEL_YEAR_DATE = MDRS_TR.MODEL_YEAR_DATE " +
											" AND MDRSTRAINING.MTC_MODEL = MDRS_TR.MTC_MODEL " +
											" AND MDRSTRAINING.EXTRACT_DATE = MDRS_TR.EXTRACT_DATE" +
											" AND MDRSTRAINING.ENTERED_TSTP = MDRS_TR.ENTERED_TSTP " +
											" AND MDRSTRAINING.DEPT_CODE = MDRS_TR.DEPT_CODE " +
											" AND MDRSTRAINING.KNOWLEDGESTATUS_NO = MDRS_TR.KNOWLEDGESTATUS_NO " +
											" AND MDRSTRAINING.PLANT_LOC_CODE = MDRS_TR.PLANT_LOC_CODE) " +
											" WHERE MDRSTRAINING.USER_LOGON_ID_NO IS NULL  " +
											" ORDER BY MDRS_TR.ENTERED_TSTP, MDRS_TR.KNOWLEDGESTATUS_NO DESC";
	
	private final String MODELS_NOT_MAPPED_TO_PROCESS_POINTS = "SELECT MDRS_TR.MODEL_YEAR_DATE, MDRS_TR.MTC_MODEL, CAST (MDRS_TR.MODEL_YEAR_DATE AS CHARACTER (4)) " +
											" FROM (SELECT tm.TEAM_ID, tm.PLANT_LOC_CODE, tm.DEPT_CODE, tm.MODEL_YEAR_DATE, tm.PROD_SCH_QTY, " +
											" tm.VEHICLE_MODEL_CODE, tm.PROD_ASM_LINE_NO, tm.TEAM_NO, pr.PROCESS_ID, pr.ASM_PROC_NO, " +
											" tr.USER_LOGON_ID_NO, tr.MTC_MODEL, tr.KNOWLEDGESTATUS_NO, tr.ENTERED_TSTP, tr.EXTRACT_DATE " +
											" FROM VIOS.PVLTM1 tm " +
											" INNER JOIN VIOS.PVLPR1 pr " +
											" ON (tm.TEAM_ID = pr.TEAM_ID) " +
											" INNER JOIN VIOS.TBLKNOWLEDGESTATUS tr " +
											" ON (    tm.MODEL_YEAR_DATE = tr.MODEL_YEAR_DATE " +
											" AND tm.PROD_ASM_LINE_NO = tr.PROCLINENO  AND tm.TEAM_NO = tr.PROCTEAM " +
											" AND tm.PROD_SCH_QTY = tr.PRODRATE  AND tm.PLANT_LOC_CODE = tr.PLANT_LOC_CODE " +
											" AND tm.DEPT_CODE = tr.DEPT_CODE  AND pr.ASM_PROC_NO = tr.PROCESS_NO) " +
											" WHERE TR.KNOWLEDGESTATUS_NO = 1) MDRS_TR " +
											" LEFT JOIN GALADM.MC_PDDA_PLATFORM_TBX PF " +
											" ON (    MDRS_TR.PLANT_LOC_CODE = PF.PLANT_LOC_CODE " +
											" AND MDRS_TR.DEPT_CODE = PF.DEPT_CODE  AND MDRS_TR.MODEL_YEAR_DATE = PF.MODEL_YEAR_DATE " +
											" AND MDRS_TR.PROD_SCH_QTY = PF.PROD_SCH_QTY  AND MDRS_TR.PROD_ASM_LINE_NO = PF.PROD_ASM_LINE_NO " +
											" AND MDRS_TR.VEHICLE_MODEL_CODE = PF.VEHICLE_MODEL_CODE  AND MDRS_TR.ASM_PROC_NO = PF.ASM_PROC_NO " +
											" AND PF.APPROVED < CURRENT_TIMESTAMP  AND (CURRENT_TIMESTAMP < PF.DEPRECATED OR PF.DEPRECATED IS NULL)) " +
											" LEFT OUTER JOIN GALADM.MC_MDRS_TRAINING_TBX MDRSTRAINING " +
											" ON (    MDRSTRAINING.USER_LOGON_ID_NO = MDRS_TR.USER_LOGON_ID_NO " +
											" AND MDRSTRAINING.PROCESS_ID = MDRS_TR.PROCESS_ID AND MDRSTRAINING.MODEL_YEAR_DATE = MDRS_TR.MODEL_YEAR_DATE " +
											" AND MDRSTRAINING.MTC_MODEL = MDRS_TR.MTC_MODEL  AND MDRSTRAINING.EXTRACT_DATE = MDRS_TR.EXTRACT_DATE " +
											" AND MDRSTRAINING.ENTERED_TSTP = MDRS_TR.ENTERED_TSTP  AND MDRSTRAINING.DEPT_CODE = MDRS_TR.DEPT_CODE " +
											" AND MDRSTRAINING.KNOWLEDGESTATUS_NO = MDRS_TR.KNOWLEDGESTATUS_NO AND MDRSTRAINING.PLANT_LOC_CODE = MDRS_TR.PLANT_LOC_CODE) " +
											" WHERE MDRSTRAINING.USER_LOGON_ID_NO IS NULL GROUP BY MDRS_TR.MODEL_YEAR_DATE, MDRS_TR.MTC_MODEL";
	
	
	public List<Object[]> getUnmappedUsersFromMDRS(){
		return findAllByNativeQuery(TRAINING_MAPPED_QUERY, null, Object[].class);
	}


	public List<Object[]> modelsNotMappedToProcessPoint() {
		return findAllByNativeQuery(MODELS_NOT_MAPPED_TO_PROCESS_POINTS, null, Object[].class);
	}

}
