package com.honda.galc.dao.jpa.conf;

import java.util.List;

import com.honda.galc.dao.conf.MCMdrsTrainingStatusDao;
import com.honda.galc.dao.jpa.BaseDaoImpl;
import com.honda.galc.entity.conf.MCMdrsTrainingStatus;
import com.honda.galc.entity.conf.MCMdrsTrainingStatusId;

/**
 * @author vfc01778
 * @date December 09, 2014
 */
public class MCMdrsTrainingStatusDaoImpl extends BaseDaoImpl<MCMdrsTrainingStatus, MCMdrsTrainingStatusId> implements MCMdrsTrainingStatusDao {
	
	private final String TRAINING_MAPPED_QUERY = "SELECT VIOS_MAST_PROC.PROCESS_POINT_ID, MDRS_TR.USER_ID, " +
			"PF.PDDA_PLATFORM_ID, MDRS_TR.APVD_PROC_MAINT_ID, MDRS_TR.MODEL_YEAR_DATE, MDRS_TR.MTC_MODEL, " +
			"CAST(MDRS_TR.MODEL_YEAR_DATE AS CHARACTER(4)) AS MODEL_YEAR_DATE_STR, MDRS_TR.LAST_UPDATED_DATE AS TRAINED, " +
			"'MDRS' AS TRAINING_METHOD, MDRS_TR.TRAINING_STATUS_ID, MDRS_TR.STATUS_ID, MDRS_TR.EXTRACT_DATE," +
			"MDRS_TR.PLANT_LOC_CODE,MDRS_TR.DEPT_CODE " +
			"FROM (SELECT tm.TEAM_ID, tm.PLANT_LOC_CODE, tm.DEPT_CODE, tm.MODEL_YEAR_DATE, tm.PROD_SCH_QTY, " +
			"tm.VEHICLE_MODEL_CODE, tm.PROD_ASM_LINE_NO, tm.TEAM_NO, pr.APVD_PROC_MAINT_ID, pr.ASM_PROC_NO, " +
			"ts.TRAINING_STATUS_ID, ts.USER_ID, ts.MTC_MODEL, ts.STATUS_ID, ts.EXTRACT_DATE, ts.LAST_UPDATED_DATE " +
			"FROM VIOS.PCLTM1 tm INNER JOIN VIOS.PCLPR1 pr  ON (tm.TEAM_ID = pr.TEAM_ID) " + 
			"INNER JOIN VIOS.TRAINING_PROCESS tp ON (tm.TEAM_ID = tp.TEAM_ID AND pr.TEAM_ID = tp.TEAM_ID AND pr.APVD_PROC_MAINT_ID = tp.PROCESSID) " + 
			"INNER JOIN VIOS.TRAINING_STATUS ts ON (tp.PROCESS_ID = ts.PROCESS_ID)) MDRS_TR " + 
			"INNER JOIN GALADM.MC_PDDA_PLATFORM_TBX PF ON (MDRS_TR.PLANT_LOC_CODE = PF.PLANT_LOC_CODE " + 
			"AND MDRS_TR.DEPT_CODE = PF.DEPT_CODE AND MDRS_TR.MODEL_YEAR_DATE = PF.MODEL_YEAR_DATE " +
			"AND MDRS_TR.PROD_SCH_QTY = PF.PROD_SCH_QTY AND MDRS_TR.PROD_ASM_LINE_NO = PF.PROD_ASM_LINE_NO " + 
			"AND MDRS_TR.VEHICLE_MODEL_CODE = PF.VEHICLE_MODEL_CODE AND MDRS_TR.ASM_PROC_NO = PF.ASM_PROC_NO " +
			"AND PF.APPROVED < CURRENT_TIMESTAMP AND (CURRENT_TIMESTAMP < PF.DEPRECATED OR PF.DEPRECATED IS NULL)) " +
			"INNER JOIN GALADM.MC_VIOS_MASTER_PLATFORM_TBX VIOS_MAST_PLAT ON PF.PLANT_LOC_CODE=VIOS_MAST_PLAT.PLANT_LOC_CODE AND PF.DEPT_CODE=VIOS_MAST_PLAT.DEPT_CODE AND PF.MODEL_YEAR_DATE=VIOS_MAST_PLAT.MODEL_YEAR_DATE AND PF.PROD_SCH_QTY=VIOS_MAST_PLAT.PROD_SCH_QTY AND PF.PROD_ASM_LINE_NO=VIOS_MAST_PLAT.PROD_ASM_LINE_NO AND PF.VEHICLE_MODEL_CODE=VIOS_MAST_PLAT.VEHICLE_MODEL_CODE " +
			"INNER JOIN GALADM.MC_VIOS_MASTER_ASM_PROC_TBX VIOS_MAST_PROC ON VIOS_MAST_PLAT.VIOS_PLATFORM_ID=VIOS_MAST_PROC.VIOS_PLATFORM_ID AND PF.ASM_PROC_NO=VIOS_MAST_PROC.ASM_PROC_NO " +
			"LEFT JOIN GALADM.MC_MDRS_TRAINING_STATUS_TBX MDRSTRAININGSTATUS ON (MDRSTRAININGSTATUS.TRAINING_STATUS_ID = MDRS_TR.TRAINING_STATUS_ID " +
			"AND MDRSTRAININGSTATUS.PDDA_PLATFORM_ID = PF.PDDA_PLATFORM_ID) WHERE MDRSTRAININGSTATUS.TRAINING_STATUS_ID IS NULL " + 
			"ORDER BY MDRS_TR.EXTRACT_DATE, MDRS_TR.LAST_UPDATED_DATE, MDRS_TR.STATUS_ID DESC";
	
	public List<Object[]> getUnmappedUsersFromMDRS(){
		return findAllByNativeQuery(TRAINING_MAPPED_QUERY, null, Object[].class);
	}
}
