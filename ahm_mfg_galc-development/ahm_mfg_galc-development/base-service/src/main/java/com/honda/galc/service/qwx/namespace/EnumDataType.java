//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.02.27 at 06:29:12 AM CST 
//


package com.honda.galc.service.qwx.namespace;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EnumDataType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EnumDataType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="NULL"/>
 *     &lt;enumeration value="RAW"/>
 *     &lt;enumeration value="float"/>
 *     &lt;enumeration value="integer"/>
 *     &lt;enumeration value="boolean"/>
 *     &lt;enumeration value="string"/>
 *     &lt;enumeration value="PortableMData"/>
 *     &lt;enumeration value="PortableEnvelope"/>
 *     &lt;enumeration value="JPEG"/>
 *     &lt;enumeration value="GIF"/>
 *     &lt;enumeration value="PNG"/>
 *     &lt;enumeration value="BMP"/>
 *     &lt;enumeration value="BirthHistoryData"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EnumDataType")
@XmlEnum
public enum EnumDataType {

    NULL("NULL"),
    RAW("RAW"),
    @XmlEnumValue("float")
    FLOAT("float"),
    @XmlEnumValue("integer")
    INTEGER("integer"),
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),
    @XmlEnumValue("string")
    STRING("string"),
    @XmlEnumValue("PortableMData")
    PORTABLE_M_DATA("PortableMData"),
    @XmlEnumValue("PortableEnvelope")
    PORTABLE_ENVELOPE("PortableEnvelope"),
    JPEG("JPEG"),
    GIF("GIF"),
    PNG("PNG"),
    BMP("BMP"),
    @XmlEnumValue("BirthHistoryData")
    BIRTH_HISTORY_DATA("BirthHistoryData");
    private final String value;

    EnumDataType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EnumDataType fromValue(String v) {
        for (EnumDataType c: EnumDataType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
