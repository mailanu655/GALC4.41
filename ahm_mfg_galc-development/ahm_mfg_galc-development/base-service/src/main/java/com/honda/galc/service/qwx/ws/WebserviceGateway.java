//
// Generated By:JAX-WS RI IBM 2.1.6 in JDK 6 (JAXB RI IBM JAXB 2.1.10 in JDK 6)
//


package com.honda.galc.service.qwx.ws;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.honda.galc.service.property.PropertyService;

@WebServiceClient(name = "WebserviceGateway", targetNamespace = "http://tempuri.org/", wsdlLocation = "META-INF/wsdl/GatewayService.singleWsdl.wsdl")
public class WebserviceGateway
    extends Service
{

    private final static URL WEBSERVICEGATEWAY_WSDL_LOCATION;
    private final static QName WEBSERVICEGATEWAY_QNAME = new QName("http://tempuri.org/", "WebserviceGateway");
    private final static Logger logger = Logger.getLogger(com.honda.galc.service.qwx.ws.WebserviceGateway.class.getName());

    static {
        URL url = null;
        try {
            url = com.honda.galc.service.qwx.ws.WebserviceGateway.class.getResource("/META-INF/wsdl/GatewayService.singleWsdl.wsdl");
            if (url == null) throw new MalformedURLException("/META-INF/wsdl/GatewayService.singleWsdl.wsdl does not exist in the module.");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'META-INF/wsdl/GatewayService.singleWsdl.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        WEBSERVICEGATEWAY_WSDL_LOCATION = url;
    }

    public WebserviceGateway(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebserviceGateway() {
        super(WEBSERVICEGATEWAY_WSDL_LOCATION, WEBSERVICEGATEWAY_QNAME);
    }
    
    public WebserviceGateway(URL wsdlLocation) {
        super(wsdlLocation, WEBSERVICEGATEWAY_QNAME);
    }
    /**
     * 
     * @return
     *     returns IWebserviceGateway
     */
    @WebEndpoint(name = "BasicHttpBinding_IWebserviceGateway")
    public IWebserviceGateway getBasicHttpBindingIWebserviceGateway() {
    	IWebserviceGateway proxy= super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWebserviceGateway"), IWebserviceGateway.class);
    	String endpoint=getEndPoint();
    	if(endpoint!=null){
    		((BindingProvider) proxy).getRequestContext().put(BindingProvider. ENDPOINT_ADDRESS_PROPERTY , endpoint);
    		((BindingProvider) proxy).getRequestContext().put("javax.xml.ws.client.connectionTimeout", getWSConnectTimeout());
    		((BindingProvider) proxy).getRequestContext().put("javax.xml.ws.client.receiveTimeout", getWSRecieveTimeout());    		
    	}
        return proxy;
    }
    
    /**
     * 
     * @return
     *     returns IWebserviceGateway
     */
    @WebEndpoint(name = "BasicHttpBinding_IWebserviceGateway")
    public IWebserviceGateway getBasicHttpBindingIWebserviceGateway(String endpoint) {
    	IWebserviceGateway proxy= super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWebserviceGateway"), IWebserviceGateway.class);
    	if(endpoint!=null){
    		((BindingProvider) proxy).getRequestContext().put(BindingProvider. ENDPOINT_ADDRESS_PROPERTY , endpoint);
    		((BindingProvider) proxy).getRequestContext().put("javax.xml.ws.client.connectionTimeout", getWSConnectTimeout());
    		((BindingProvider) proxy).getRequestContext().put("javax.xml.ws.client.receiveTimeout", getWSRecieveTimeout());    		
    	}
        return proxy;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IWebserviceGateway
     */
    @WebEndpoint(name = "BasicHttpBinding_IWebserviceGateway")
    public IWebserviceGateway getBasicHttpBindingIWebserviceGateway(WebServiceFeature... features) {
        IWebserviceGateway proxy=  super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_IWebserviceGateway"), IWebserviceGateway.class, features);
        String endpoint=getEndPoint();
    	if(endpoint!=null)
        	((BindingProvider) proxy).getRequestContext().put(BindingProvider. ENDPOINT_ADDRESS_PROPERTY , endpoint);
        return proxy;
    }
    
    public static String getEndPoint(){
    	return PropertyService.getProperty("WEB_SERVICE", "QWX_WEB_SERVICE_ENDPOINT");    	
    }
    public static int getWSConnectTimeout(){
    	return PropertyService.getPropertyInt("WEB_SERVICE", "WS_CONNECT_TIMEOUT",6000);    	
    }
    public static int getWSRecieveTimeout(){
    	return PropertyService.getPropertyInt("WEB_SERVICE", "WS_RECIEVE_TIMEOUT",6000);    	
    }

}
